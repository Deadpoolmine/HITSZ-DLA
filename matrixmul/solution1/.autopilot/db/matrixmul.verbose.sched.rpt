

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Tue Nov 17 21:02:06 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        matrixmul
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  137|  137|  137|  137|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+-----+-----+----------+-----------+-----------+------+----------+
        |           |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Row_Col  |  135|  135|        24|          8|          1|    15|    yes   |
        +-----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 24


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 26
* Pipeline : 1
  Pipeline-0 : II = 8, D = 24, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	26  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	2  / true
26 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 27 [1/1] (1.00ns)   --->   "%out_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %out_r)"   --->   Operation 27 'read' 'out_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 28 [1/1] (1.00ns)   --->   "%B_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %B)"   --->   Operation 28 'read' 'B_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 29 [1/1] (1.00ns)   --->   "%A_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %A)"   --->   Operation 29 'read' 'A_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %out_read, i32 2, i32 31)"   --->   Operation 30 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_cast = zext i30 %tmp to i31"   --->   Operation 31 'zext' 'tmp_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %B_read, i32 2, i32 31)"   --->   Operation 32 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_1_cast = zext i30 %tmp_1 to i31"   --->   Operation 33 'zext' 'tmp_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%A1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %A_read, i32 2, i32 31)"   --->   Operation 34 'partselect' 'A1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_4 = zext i30 %A1 to i64"   --->   Operation 35 'zext' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_4_cast = zext i30 %A1 to i31"   --->   Operation 36 'zext' 'tmp_4_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %gmem), !map !11"   --->   Operation 37 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind"   --->   Operation 38 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %gmem, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1024, [5 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmul/matrixmul.cpp:20]   --->   Operation 39 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %A, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1024, [1 x i8]* @bundle, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmul/matrixmul.cpp:20]   --->   Operation 40 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %B, [10 x i8]* @mode3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1024, [1 x i8]* @bundle4, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmul/matrixmul.cpp:20]   --->   Operation 41 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %out_r, [10 x i8]* @mode5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1024, [1 x i8]* @bundle6, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmul/matrixmul.cpp:20]   --->   Operation 42 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [matrixmul/matrixmul.cpp:20]   --->   Operation 43 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (1.76ns)   --->   "br label %1" [matrixmul/matrixmul.cpp:21]   --->   Operation 44 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.05>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i4 [ 0, %0 ], [ %indvar_flatten_next, %.reset ]"   --->   Operation 45 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%i = phi i2 [ 0, %0 ], [ %tmp_mid2_v, %.reset ]" [matrixmul/matrixmul.cpp:28]   --->   Operation 46 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%j = phi i3 [ 0, %0 ], [ %j_1, %.reset ]"   --->   Operation 47 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.30ns)   --->   "%exitcond_flatten = icmp eq i4 %indvar_flatten, -1"   --->   Operation 48 'icmp' 'exitcond_flatten' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 15, i64 15, i64 15)"   --->   Operation 49 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (1.73ns)   --->   "%indvar_flatten_next = add i4 %indvar_flatten, 1"   --->   Operation 50 'add' 'indvar_flatten_next' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %exitcond_flatten, label %2, label %.reset"   --->   Operation 51 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (1.56ns)   --->   "%i_1 = add i2 %i, 1" [matrixmul/matrixmul.cpp:21]   --->   Operation 52 'add' 'i_1' <Predicate = (!exitcond_flatten)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (1.13ns)   --->   "%exitcond = icmp eq i3 %j, -3" [matrixmul/matrixmul.cpp:23]   --->   Operation 53 'icmp' 'exitcond' <Predicate = (!exitcond_flatten)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.98ns)   --->   "%j_mid2 = select i1 %exitcond, i3 0, i3 %j" [matrixmul/matrixmul.cpp:23]   --->   Operation 54 'select' 'j_mid2' <Predicate = (!exitcond_flatten)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.99ns)   --->   "%tmp_mid2_v = select i1 %exitcond, i2 %i_1, i2 %i" [matrixmul/matrixmul.cpp:28]   --->   Operation 55 'select' 'tmp_mid2_v' <Predicate = (!exitcond_flatten)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_5 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %tmp_mid2_v, i2 0)" [matrixmul/matrixmul.cpp:28]   --->   Operation 56 'bitconcatenate' 'tmp_5' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_7_cast = zext i4 %tmp_5 to i31" [matrixmul/matrixmul.cpp:28]   --->   Operation 57 'zext' 'tmp_7_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (2.49ns)   --->   "%A2_sum = add i31 %tmp_7_cast, %tmp_4_cast" [matrixmul/matrixmul.cpp:28]   --->   Operation 58 'add' 'A2_sum' <Predicate = (!exitcond_flatten)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%A2_sum_cast = zext i31 %A2_sum to i64" [matrixmul/matrixmul.cpp:28]   --->   Operation 59 'zext' 'A2_sum_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32* %gmem, i64 %A2_sum_cast" [matrixmul/matrixmul.cpp:28]   --->   Operation 60 'getelementptr' 'gmem_addr' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_2_cast = zext i3 %j_mid2 to i31" [matrixmul/matrixmul.cpp:28]   --->   Operation 61 'zext' 'tmp_2_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (2.49ns)   --->   "%B4_sum = add i31 %tmp_2_cast, %tmp_1_cast" [matrixmul/matrixmul.cpp:28]   --->   Operation 62 'add' 'B4_sum' <Predicate = (!exitcond_flatten)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [7/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 63 'readreq' 'gmem_load_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node A2_sum7)   --->   "%tmp_8 = or i4 %tmp_5, 1" [matrixmul/matrixmul.cpp:28]   --->   Operation 64 'or' 'tmp_8' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node A2_sum7)   --->   "%tmp_9 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 0, i4 %tmp_8)" [matrixmul/matrixmul.cpp:28]   --->   Operation 65 'bitconcatenate' 'tmp_9' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (3.52ns) (out node of the LUT)   --->   "%A2_sum7 = add i64 %tmp_9, %tmp_4" [matrixmul/matrixmul.cpp:28]   --->   Operation 66 'add' 'A2_sum7' <Predicate = (!exitcond_flatten)> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32* %gmem, i64 %A2_sum7" [matrixmul/matrixmul.cpp:28]   --->   Operation 67 'getelementptr' 'gmem_addr_1' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%B4_sum_cast = zext i31 %B4_sum to i64" [matrixmul/matrixmul.cpp:28]   --->   Operation 68 'zext' 'B4_sum_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%gmem_addr_4 = getelementptr i32* %gmem, i64 %B4_sum_cast" [matrixmul/matrixmul.cpp:28]   --->   Operation 69 'getelementptr' 'gmem_addr_4' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_4 : Operation 70 [6/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 70 'readreq' 'gmem_load_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 71 [7/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_4, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 71 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_2_cast2 = zext i3 %j_mid2 to i4" [matrixmul/matrixmul.cpp:28]   --->   Operation 72 'zext' 'tmp_2_cast2' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (1.73ns)   --->   "%tmp_12 = add i4 %tmp_2_cast2, 5" [matrixmul/matrixmul.cpp:28]   --->   Operation 73 'add' 'tmp_12' <Predicate = (!exitcond_flatten)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_16_cast = zext i4 %tmp_12 to i31" [matrixmul/matrixmul.cpp:28]   --->   Operation 74 'zext' 'tmp_16_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (2.49ns)   --->   "%B4_sum1 = add i31 %tmp_16_cast, %tmp_1_cast" [matrixmul/matrixmul.cpp:28]   --->   Operation 75 'add' 'B4_sum1' <Predicate = (!exitcond_flatten)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 76 [5/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 76 'readreq' 'gmem_load_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 77 [6/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_4, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 77 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 78 [7/7] (8.75ns)   --->   "%gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 78 'readreq' 'gmem_load_2_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node A2_sum8)   --->   "%tmp_s = or i4 %tmp_5, 2" [matrixmul/matrixmul.cpp:28]   --->   Operation 79 'or' 'tmp_s' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node A2_sum8)   --->   "%tmp_2 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 0, i4 %tmp_s)" [matrixmul/matrixmul.cpp:28]   --->   Operation 80 'bitconcatenate' 'tmp_2' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (3.52ns) (out node of the LUT)   --->   "%A2_sum8 = add i64 %tmp_2, %tmp_4" [matrixmul/matrixmul.cpp:28]   --->   Operation 81 'add' 'A2_sum8' <Predicate = (!exitcond_flatten)> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%gmem_addr_2 = getelementptr i32* %gmem, i64 %A2_sum8" [matrixmul/matrixmul.cpp:28]   --->   Operation 82 'getelementptr' 'gmem_addr_2' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (0.00ns)   --->   "%B4_sum1_cast = zext i31 %B4_sum1 to i64" [matrixmul/matrixmul.cpp:28]   --->   Operation 83 'zext' 'B4_sum1_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%gmem_addr_5 = getelementptr i32* %gmem, i64 %B4_sum1_cast" [matrixmul/matrixmul.cpp:28]   --->   Operation 84 'getelementptr' 'gmem_addr_5' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_6 : Operation 85 [4/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 85 'readreq' 'gmem_load_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 86 [5/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_4, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 86 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 87 [6/7] (8.75ns)   --->   "%gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 87 'readreq' 'gmem_load_2_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 88 [7/7] (8.75ns)   --->   "%gmem_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_5, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 88 'readreq' 'gmem_load_3_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_2_cast1 = zext i3 %j_mid2 to i5" [matrixmul/matrixmul.cpp:28]   --->   Operation 89 'zext' 'tmp_2_cast1' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (1.78ns)   --->   "%tmp_13 = add i5 %tmp_2_cast1, 10" [matrixmul/matrixmul.cpp:28]   --->   Operation 90 'add' 'tmp_13' <Predicate = (!exitcond_flatten)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_17_cast = zext i5 %tmp_13 to i31" [matrixmul/matrixmul.cpp:28]   --->   Operation 91 'zext' 'tmp_17_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_7 : Operation 92 [1/1] (2.49ns)   --->   "%B4_sum2 = add i31 %tmp_17_cast, %tmp_1_cast" [matrixmul/matrixmul.cpp:28]   --->   Operation 92 'add' 'B4_sum2' <Predicate = (!exitcond_flatten)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [3/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 93 'readreq' 'gmem_load_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 94 [4/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_4, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 94 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 95 [5/7] (8.75ns)   --->   "%gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 95 'readreq' 'gmem_load_2_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 96 [6/7] (8.75ns)   --->   "%gmem_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_5, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 96 'readreq' 'gmem_load_3_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 97 [7/7] (8.75ns)   --->   "%gmem_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_2, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 97 'readreq' 'gmem_load_4_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node A2_sum9)   --->   "%tmp_7 = or i4 %tmp_5, 3" [matrixmul/matrixmul.cpp:28]   --->   Operation 98 'or' 'tmp_7' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_8 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node A2_sum9)   --->   "%tmp_10 = call i64 @_ssdm_op_BitConcatenate.i64.i60.i4(i60 0, i4 %tmp_7)" [matrixmul/matrixmul.cpp:28]   --->   Operation 99 'bitconcatenate' 'tmp_10' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_8 : Operation 100 [1/1] (3.52ns) (out node of the LUT)   --->   "%A2_sum9 = add i64 %tmp_10, %tmp_4" [matrixmul/matrixmul.cpp:28]   --->   Operation 100 'add' 'A2_sum9' <Predicate = (!exitcond_flatten)> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (0.00ns)   --->   "%gmem_addr_3 = getelementptr i32* %gmem, i64 %A2_sum9" [matrixmul/matrixmul.cpp:28]   --->   Operation 101 'getelementptr' 'gmem_addr_3' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%B4_sum2_cast = zext i31 %B4_sum2 to i64" [matrixmul/matrixmul.cpp:28]   --->   Operation 102 'zext' 'B4_sum2_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%gmem_addr_6 = getelementptr i32* %gmem, i64 %B4_sum2_cast" [matrixmul/matrixmul.cpp:28]   --->   Operation 103 'getelementptr' 'gmem_addr_6' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_8 : Operation 104 [2/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 104 'readreq' 'gmem_load_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 105 [3/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_4, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 105 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 106 [4/7] (8.75ns)   --->   "%gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 106 'readreq' 'gmem_load_2_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 107 [5/7] (8.75ns)   --->   "%gmem_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_5, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 107 'readreq' 'gmem_load_3_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 108 [6/7] (8.75ns)   --->   "%gmem_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_2, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 108 'readreq' 'gmem_load_4_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 109 [7/7] (8.75ns)   --->   "%gmem_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_6, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 109 'readreq' 'gmem_load_5_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_mid2_cast = zext i2 %tmp_mid2_v to i5" [matrixmul/matrixmul.cpp:28]   --->   Operation 110 'zext' 'tmp_mid2_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_9 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_7_cast1 = zext i4 %tmp_5 to i5" [matrixmul/matrixmul.cpp:28]   --->   Operation 111 'zext' 'tmp_7_cast1' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_9 : Operation 112 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_11 = add i5 %tmp_7_cast1, %tmp_mid2_cast" [matrixmul/matrixmul.cpp:30]   --->   Operation 112 'add' 'tmp_11' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 113 [1/1] (1.78ns)   --->   "%tmp_14 = add i5 %tmp_2_cast1, 15" [matrixmul/matrixmul.cpp:28]   --->   Operation 113 'add' 'tmp_14' <Predicate = (!exitcond_flatten)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_18_cast = zext i5 %tmp_14 to i31" [matrixmul/matrixmul.cpp:28]   --->   Operation 114 'zext' 'tmp_18_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_9 : Operation 115 [1/1] (2.49ns)   --->   "%B4_sum3 = add i31 %tmp_18_cast, %tmp_1_cast" [matrixmul/matrixmul.cpp:28]   --->   Operation 115 'add' 'B4_sum3' <Predicate = (!exitcond_flatten)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 116 [1/1] (3.40ns) (root node of TernaryAdder)   --->   "%tmp_15 = add i5 %tmp_2_cast1, %tmp_11" [matrixmul/matrixmul.cpp:30]   --->   Operation 116 'add' 'tmp_15' <Predicate = (!exitcond_flatten)> <Delay = 3.40> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 117 [1/7] (8.75ns)   --->   "%gmem_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 117 'readreq' 'gmem_load_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 118 [2/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_4, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 118 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 119 [3/7] (8.75ns)   --->   "%gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 119 'readreq' 'gmem_load_2_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 120 [4/7] (8.75ns)   --->   "%gmem_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_5, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 120 'readreq' 'gmem_load_3_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 121 [5/7] (8.75ns)   --->   "%gmem_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_2, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 121 'readreq' 'gmem_load_4_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 122 [6/7] (8.75ns)   --->   "%gmem_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_6, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 122 'readreq' 'gmem_load_5_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 123 [7/7] (8.75ns)   --->   "%gmem_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_3, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 123 'readreq' 'gmem_load_6_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 124 [1/1] (1.65ns)   --->   "%j_1 = add i3 %j_mid2, 1" [matrixmul/matrixmul.cpp:23]   --->   Operation 124 'add' 'j_1' <Predicate = (!exitcond_flatten)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 125 [1/1] (0.00ns)   --->   "%B4_sum3_cast = zext i31 %B4_sum3 to i64" [matrixmul/matrixmul.cpp:28]   --->   Operation 125 'zext' 'B4_sum3_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_10 : Operation 126 [1/1] (0.00ns)   --->   "%gmem_addr_7 = getelementptr i32* %gmem, i64 %B4_sum3_cast" [matrixmul/matrixmul.cpp:28]   --->   Operation 126 'getelementptr' 'gmem_addr_7' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_10 : Operation 127 [1/1] (8.75ns)   --->   "%gmem_addr_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %gmem_addr)" [matrixmul/matrixmul.cpp:28]   --->   Operation 127 'read' 'gmem_addr_read' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 128 [1/7] (8.75ns)   --->   "%gmem_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_4, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 128 'readreq' 'gmem_load_1_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 129 [2/7] (8.75ns)   --->   "%gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 129 'readreq' 'gmem_load_2_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 130 [3/7] (8.75ns)   --->   "%gmem_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_5, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 130 'readreq' 'gmem_load_3_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 131 [4/7] (8.75ns)   --->   "%gmem_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_2, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 131 'readreq' 'gmem_load_4_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 132 [5/7] (8.75ns)   --->   "%gmem_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_6, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 132 'readreq' 'gmem_load_5_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 133 [6/7] (8.75ns)   --->   "%gmem_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_3, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 133 'readreq' 'gmem_load_6_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 134 [7/7] (8.75ns)   --->   "%gmem_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_7, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 134 'readreq' 'gmem_load_7_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 135 [1/1] (8.75ns)   --->   "%gmem_addr_4_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %gmem_addr_4)" [matrixmul/matrixmul.cpp:28]   --->   Operation 135 'read' 'gmem_addr_4_read' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 136 [1/7] (8.75ns)   --->   "%gmem_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 136 'readreq' 'gmem_load_2_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 137 [2/7] (8.75ns)   --->   "%gmem_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_5, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 137 'readreq' 'gmem_load_3_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 138 [3/7] (8.75ns)   --->   "%gmem_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_2, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 138 'readreq' 'gmem_load_4_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 139 [4/7] (8.75ns)   --->   "%gmem_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_6, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 139 'readreq' 'gmem_load_5_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 140 [5/7] (8.75ns)   --->   "%gmem_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_3, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 140 'readreq' 'gmem_load_6_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 141 [6/7] (8.75ns)   --->   "%gmem_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_7, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 141 'readreq' 'gmem_load_7_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 142 [1/1] (8.51ns)   --->   "%tmp_6 = mul nsw i32 %gmem_addr_read, %gmem_addr_4_read" [matrixmul/matrixmul.cpp:28]   --->   Operation 142 'mul' 'tmp_6' <Predicate = (!exitcond_flatten)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 143 [1/1] (8.75ns)   --->   "%gmem_addr_1_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %gmem_addr_1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 143 'read' 'gmem_addr_1_read' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 144 [1/7] (8.75ns)   --->   "%gmem_load_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_5, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 144 'readreq' 'gmem_load_3_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 145 [2/7] (8.75ns)   --->   "%gmem_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_2, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 145 'readreq' 'gmem_load_4_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 146 [3/7] (8.75ns)   --->   "%gmem_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_6, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 146 'readreq' 'gmem_load_5_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 147 [4/7] (8.75ns)   --->   "%gmem_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_3, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 147 'readreq' 'gmem_load_6_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 148 [5/7] (8.75ns)   --->   "%gmem_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_7, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 148 'readreq' 'gmem_load_7_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 149 [1/1] (8.75ns)   --->   "%gmem_addr_5_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %gmem_addr_5)" [matrixmul/matrixmul.cpp:28]   --->   Operation 149 'read' 'gmem_addr_5_read' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 150 [1/7] (8.75ns)   --->   "%gmem_load_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_2, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 150 'readreq' 'gmem_load_4_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 151 [2/7] (8.75ns)   --->   "%gmem_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_6, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 151 'readreq' 'gmem_load_5_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 152 [3/7] (8.75ns)   --->   "%gmem_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_3, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 152 'readreq' 'gmem_load_6_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 153 [4/7] (8.75ns)   --->   "%gmem_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_7, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 153 'readreq' 'gmem_load_7_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 154 [1/1] (8.51ns)   --->   "%tmp_6_1 = mul nsw i32 %gmem_addr_1_read, %gmem_addr_5_read" [matrixmul/matrixmul.cpp:28]   --->   Operation 154 'mul' 'tmp_6_1' <Predicate = (!exitcond_flatten)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 155 [1/1] (8.75ns)   --->   "%gmem_addr_2_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %gmem_addr_2)" [matrixmul/matrixmul.cpp:28]   --->   Operation 155 'read' 'gmem_addr_2_read' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 156 [1/7] (8.75ns)   --->   "%gmem_load_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_6, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 156 'readreq' 'gmem_load_5_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 157 [2/7] (8.75ns)   --->   "%gmem_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_3, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 157 'readreq' 'gmem_load_6_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 158 [3/7] (8.75ns)   --->   "%gmem_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_7, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 158 'readreq' 'gmem_load_7_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 159 [1/1] (8.75ns)   --->   "%gmem_addr_6_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %gmem_addr_6)" [matrixmul/matrixmul.cpp:28]   --->   Operation 159 'read' 'gmem_addr_6_read' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 160 [1/7] (8.75ns)   --->   "%gmem_load_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_3, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 160 'readreq' 'gmem_load_6_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 161 [2/7] (8.75ns)   --->   "%gmem_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_7, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 161 'readreq' 'gmem_load_7_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 162 [1/1] (8.51ns)   --->   "%tmp_6_2 = mul nsw i32 %gmem_addr_2_read, %gmem_addr_6_read" [matrixmul/matrixmul.cpp:28]   --->   Operation 162 'mul' 'tmp_6_2' <Predicate = (!exitcond_flatten)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 163 [1/1] (8.75ns)   --->   "%gmem_addr_3_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %gmem_addr_3)" [matrixmul/matrixmul.cpp:28]   --->   Operation 163 'read' 'gmem_addr_3_read' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 164 [1/7] (8.75ns)   --->   "%gmem_load_7_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_7, i32 1)" [matrixmul/matrixmul.cpp:28]   --->   Operation 164 'readreq' 'gmem_load_7_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 165 [1/1] (8.75ns)   --->   "%gmem_addr_7_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %gmem_addr_7)" [matrixmul/matrixmul.cpp:28]   --->   Operation 165 'read' 'gmem_addr_7_read' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.51>
ST_18 : Operation 166 [1/1] (0.00ns)   --->   "%tmp_19_cast = zext i5 %tmp_15 to i31" [matrixmul/matrixmul.cpp:30]   --->   Operation 166 'zext' 'tmp_19_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_18 : Operation 167 [1/1] (2.49ns)   --->   "%out6_sum = add i31 %tmp_19_cast, %tmp_cast" [matrixmul/matrixmul.cpp:30]   --->   Operation 167 'add' 'out6_sum' <Predicate = (!exitcond_flatten)> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 168 [1/1] (8.51ns)   --->   "%tmp_6_3 = mul nsw i32 %gmem_addr_3_read, %gmem_addr_7_read" [matrixmul/matrixmul.cpp:28]   --->   Operation 168 'mul' 'tmp_6_3' <Predicate = (!exitcond_flatten)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 169 [1/1] (0.00ns)   --->   "%out6_sum_cast = zext i31 %out6_sum to i64" [matrixmul/matrixmul.cpp:30]   --->   Operation 169 'zext' 'out6_sum_cast' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_19 : Operation 170 [1/1] (0.00ns)   --->   "%gmem_addr_8 = getelementptr i32* %gmem, i64 %out6_sum_cast" [matrixmul/matrixmul.cpp:30]   --->   Operation 170 'getelementptr' 'gmem_addr_8' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_19 : Operation 171 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp1 = add i32 %tmp_6, %tmp_6_1" [matrixmul/matrixmul.cpp:28]   --->   Operation 171 'add' 'tmp1' <Predicate = (!exitcond_flatten)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_19 : Operation 172 [1/1] (2.55ns)   --->   "%tmp2 = add i32 %tmp_6_2, %tmp_6_3" [matrixmul/matrixmul.cpp:28]   --->   Operation 172 'add' 'tmp2' <Predicate = (!exitcond_flatten)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 173 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp_1_3 = add nsw i32 %tmp2, %tmp1" [matrixmul/matrixmul.cpp:28]   --->   Operation 173 'add' 'tmp_1_3' <Predicate = (!exitcond_flatten)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_19 : Operation 174 [1/1] (8.75ns)   --->   "%gmem_addr_8_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %gmem_addr_8, i32 1)" [matrixmul/matrixmul.cpp:30]   --->   Operation 174 'writereq' 'gmem_addr_8_req' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 175 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %gmem_addr_8, i32 %tmp_1_3, i4 -1)" [matrixmul/matrixmul.cpp:30]   --->   Operation 175 'write' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 176 [5/5] (8.75ns)   --->   "%gmem_addr_8_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr_8)" [matrixmul/matrixmul.cpp:30]   --->   Operation 176 'writeresp' 'gmem_addr_8_resp' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 8.75>
ST_22 : Operation 177 [4/5] (8.75ns)   --->   "%gmem_addr_8_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr_8)" [matrixmul/matrixmul.cpp:30]   --->   Operation 177 'writeresp' 'gmem_addr_8_resp' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 178 [3/5] (8.75ns)   --->   "%gmem_addr_8_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr_8)" [matrixmul/matrixmul.cpp:30]   --->   Operation 178 'writeresp' 'gmem_addr_8_resp' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 8.75>
ST_24 : Operation 179 [2/5] (8.75ns)   --->   "%gmem_addr_8_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr_8)" [matrixmul/matrixmul.cpp:30]   --->   Operation 179 'writeresp' 'gmem_addr_8_resp' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 180 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @Row_Col_str)"   --->   Operation 180 'specloopname' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 181 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str6) nounwind" [matrixmul/matrixmul.cpp:24]   --->   Operation 181 'specloopname' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 182 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str6) nounwind" [matrixmul/matrixmul.cpp:24]   --->   Operation 182 'specregionbegin' 'tmp_3' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 183 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [matrixmul/matrixmul.cpp:25]   --->   Operation 183 'specpipeline' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 184 [1/5] (8.75ns)   --->   "%gmem_addr_8_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr_8)" [matrixmul/matrixmul.cpp:30]   --->   Operation 184 'writeresp' 'gmem_addr_8_resp' <Predicate = (!exitcond_flatten)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 185 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str6, i32 %tmp_3) nounwind" [matrixmul/matrixmul.cpp:31]   --->   Operation 185 'specregionend' 'empty_4' <Predicate = (!exitcond_flatten)> <Delay = 0.00>
ST_25 : Operation 186 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 186 'br' <Predicate = (!exitcond_flatten)> <Delay = 0.00>

State 26 <SV = 2> <Delay = 0.00>
ST_26 : Operation 187 [1/1] (0.00ns)   --->   "ret void" [matrixmul/matrixmul.cpp:33]   --->   Operation 187 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [24]  (1.77 ns)

 <State 2>: 5.05ns
The critical path consists of the following:
	'phi' operation ('i', matrixmul/matrixmul.cpp:28) with incoming values : ('tmp_mid2_v', matrixmul/matrixmul.cpp:28) [25]  (0 ns)
	'add' operation ('i', matrixmul/matrixmul.cpp:21) [32]  (1.56 ns)
	'select' operation ('tmp_mid2_v', matrixmul/matrixmul.cpp:28) [36]  (0.993 ns)
	'add' operation ('A2_sum', matrixmul/matrixmul.cpp:28) [41]  (2.49 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr', matrixmul/matrixmul.cpp:28) [43]  (0 ns)
	bus request on port 'gmem' (matrixmul/matrixmul.cpp:28) [86]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr_4', matrixmul/matrixmul.cpp:28) [65]  (0 ns)
	bus request on port 'gmem' (matrixmul/matrixmul.cpp:28) [88]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (matrixmul/matrixmul.cpp:28) [86]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr_5', matrixmul/matrixmul.cpp:28) [70]  (0 ns)
	bus request on port 'gmem' (matrixmul/matrixmul.cpp:28) [93]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (matrixmul/matrixmul.cpp:28) [86]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr_6', matrixmul/matrixmul.cpp:28) [75]  (0 ns)
	bus request on port 'gmem' (matrixmul/matrixmul.cpp:28) [98]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (matrixmul/matrixmul.cpp:28) [86]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr_7', matrixmul/matrixmul.cpp:28) [80]  (0 ns)
	bus request on port 'gmem' (matrixmul/matrixmul.cpp:28) [103]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (matrixmul/matrixmul.cpp:28) [89]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (matrixmul/matrixmul.cpp:28) [92]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (matrixmul/matrixmul.cpp:28) [94]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (matrixmul/matrixmul.cpp:28) [97]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (matrixmul/matrixmul.cpp:28) [99]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (matrixmul/matrixmul.cpp:28) [102]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (matrixmul/matrixmul.cpp:28) [104]  (8.75 ns)

 <State 18>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_6_3', matrixmul/matrixmul.cpp:28) [105]  (8.51 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr_8', matrixmul/matrixmul.cpp:30) [85]  (0 ns)
	bus request on port 'gmem' (matrixmul/matrixmul.cpp:30) [109]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus write on port 'gmem' (matrixmul/matrixmul.cpp:30) [110]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus access on port 'gmem' (matrixmul/matrixmul.cpp:30) [111]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus access on port 'gmem' (matrixmul/matrixmul.cpp:30) [111]  (8.75 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	bus access on port 'gmem' (matrixmul/matrixmul.cpp:30) [111]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus access on port 'gmem' (matrixmul/matrixmul.cpp:30) [111]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus access on port 'gmem' (matrixmul/matrixmul.cpp:30) [111]  (8.75 ns)

 <State 26>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
