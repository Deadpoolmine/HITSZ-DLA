// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrixmul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixmul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixmul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> matrixmul::ap_ST_fsm_state1 = "1";
const sc_lv<10> matrixmul::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<10> matrixmul::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<10> matrixmul::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<10> matrixmul::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<10> matrixmul::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<10> matrixmul::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<10> matrixmul::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<10> matrixmul::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<10> matrixmul::ap_ST_fsm_state26 = "1000000000";
const sc_lv<32> matrixmul::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool matrixmul::ap_const_boolean_1 = true;
const sc_lv<32> matrixmul::ap_const_lv32_2 = "10";
const bool matrixmul::ap_const_boolean_0 = false;
const sc_lv<1> matrixmul::ap_const_lv1_0 = "0";
const sc_lv<32> matrixmul::ap_const_lv32_1 = "1";
const sc_lv<32> matrixmul::ap_const_lv32_4 = "100";
const sc_lv<32> matrixmul::ap_const_lv32_3 = "11";
const sc_lv<32> matrixmul::ap_const_lv32_6 = "110";
const sc_lv<32> matrixmul::ap_const_lv32_5 = "101";
const sc_lv<32> matrixmul::ap_const_lv32_8 = "1000";
const sc_lv<32> matrixmul::ap_const_lv32_7 = "111";
const int matrixmul::C_S_AXI_DATA_WIDTH = "100000";
const int matrixmul::C_M_AXI_GMEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int matrixmul::C_M_AXI_GMEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int matrixmul::C_M_AXI_GMEM_CACHE_VALUE = "11";
const int matrixmul::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<1> matrixmul::ap_const_lv1_1 = "1";
const sc_lv<4> matrixmul::ap_const_lv4_0 = "0000";
const sc_lv<2> matrixmul::ap_const_lv2_0 = "00";
const sc_lv<3> matrixmul::ap_const_lv3_0 = "000";
const sc_lv<4> matrixmul::ap_const_lv4_F = "1111";
const sc_lv<32> matrixmul::ap_const_lv32_1F = "11111";
const sc_lv<4> matrixmul::ap_const_lv4_1 = "1";
const sc_lv<2> matrixmul::ap_const_lv2_1 = "1";
const sc_lv<3> matrixmul::ap_const_lv3_5 = "101";
const sc_lv<60> matrixmul::ap_const_lv60_0 = "000000000000000000000000000000000000000000000000000000000000";
const sc_lv<4> matrixmul::ap_const_lv4_5 = "101";
const sc_lv<4> matrixmul::ap_const_lv4_2 = "10";
const sc_lv<5> matrixmul::ap_const_lv5_A = "1010";
const sc_lv<4> matrixmul::ap_const_lv4_3 = "11";
const sc_lv<5> matrixmul::ap_const_lv5_F = "1111";
const sc_lv<3> matrixmul::ap_const_lv3_1 = "1";
const sc_lv<32> matrixmul::ap_const_lv32_9 = "1001";

matrixmul::matrixmul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matrixmul_AXILiteS_s_axi_U = new matrixmul_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("matrixmul_AXILiteS_s_axi_U");
    matrixmul_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    matrixmul_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    matrixmul_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    matrixmul_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    matrixmul_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    matrixmul_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    matrixmul_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    matrixmul_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    matrixmul_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    matrixmul_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    matrixmul_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    matrixmul_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    matrixmul_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    matrixmul_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    matrixmul_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    matrixmul_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    matrixmul_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    matrixmul_AXILiteS_s_axi_U->ACLK(ap_clk);
    matrixmul_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    matrixmul_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    matrixmul_AXILiteS_s_axi_U->ap_start(ap_start);
    matrixmul_AXILiteS_s_axi_U->interrupt(interrupt);
    matrixmul_AXILiteS_s_axi_U->ap_ready(ap_ready);
    matrixmul_AXILiteS_s_axi_U->ap_done(ap_done);
    matrixmul_AXILiteS_s_axi_U->ap_idle(ap_idle);
    matrixmul_AXILiteS_s_axi_U->A(A);
    matrixmul_AXILiteS_s_axi_U->B(B);
    matrixmul_AXILiteS_s_axi_U->out_r(out_r);
    matrixmul_gmem_m_axi_U = new matrixmul_gmem_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>("matrixmul_gmem_m_axi_U");
    matrixmul_gmem_m_axi_U->AWVALID(m_axi_gmem_AWVALID);
    matrixmul_gmem_m_axi_U->AWREADY(m_axi_gmem_AWREADY);
    matrixmul_gmem_m_axi_U->AWADDR(m_axi_gmem_AWADDR);
    matrixmul_gmem_m_axi_U->AWID(m_axi_gmem_AWID);
    matrixmul_gmem_m_axi_U->AWLEN(m_axi_gmem_AWLEN);
    matrixmul_gmem_m_axi_U->AWSIZE(m_axi_gmem_AWSIZE);
    matrixmul_gmem_m_axi_U->AWBURST(m_axi_gmem_AWBURST);
    matrixmul_gmem_m_axi_U->AWLOCK(m_axi_gmem_AWLOCK);
    matrixmul_gmem_m_axi_U->AWCACHE(m_axi_gmem_AWCACHE);
    matrixmul_gmem_m_axi_U->AWPROT(m_axi_gmem_AWPROT);
    matrixmul_gmem_m_axi_U->AWQOS(m_axi_gmem_AWQOS);
    matrixmul_gmem_m_axi_U->AWREGION(m_axi_gmem_AWREGION);
    matrixmul_gmem_m_axi_U->AWUSER(m_axi_gmem_AWUSER);
    matrixmul_gmem_m_axi_U->WVALID(m_axi_gmem_WVALID);
    matrixmul_gmem_m_axi_U->WREADY(m_axi_gmem_WREADY);
    matrixmul_gmem_m_axi_U->WDATA(m_axi_gmem_WDATA);
    matrixmul_gmem_m_axi_U->WSTRB(m_axi_gmem_WSTRB);
    matrixmul_gmem_m_axi_U->WLAST(m_axi_gmem_WLAST);
    matrixmul_gmem_m_axi_U->WID(m_axi_gmem_WID);
    matrixmul_gmem_m_axi_U->WUSER(m_axi_gmem_WUSER);
    matrixmul_gmem_m_axi_U->ARVALID(m_axi_gmem_ARVALID);
    matrixmul_gmem_m_axi_U->ARREADY(m_axi_gmem_ARREADY);
    matrixmul_gmem_m_axi_U->ARADDR(m_axi_gmem_ARADDR);
    matrixmul_gmem_m_axi_U->ARID(m_axi_gmem_ARID);
    matrixmul_gmem_m_axi_U->ARLEN(m_axi_gmem_ARLEN);
    matrixmul_gmem_m_axi_U->ARSIZE(m_axi_gmem_ARSIZE);
    matrixmul_gmem_m_axi_U->ARBURST(m_axi_gmem_ARBURST);
    matrixmul_gmem_m_axi_U->ARLOCK(m_axi_gmem_ARLOCK);
    matrixmul_gmem_m_axi_U->ARCACHE(m_axi_gmem_ARCACHE);
    matrixmul_gmem_m_axi_U->ARPROT(m_axi_gmem_ARPROT);
    matrixmul_gmem_m_axi_U->ARQOS(m_axi_gmem_ARQOS);
    matrixmul_gmem_m_axi_U->ARREGION(m_axi_gmem_ARREGION);
    matrixmul_gmem_m_axi_U->ARUSER(m_axi_gmem_ARUSER);
    matrixmul_gmem_m_axi_U->RVALID(m_axi_gmem_RVALID);
    matrixmul_gmem_m_axi_U->RREADY(m_axi_gmem_RREADY);
    matrixmul_gmem_m_axi_U->RDATA(m_axi_gmem_RDATA);
    matrixmul_gmem_m_axi_U->RLAST(m_axi_gmem_RLAST);
    matrixmul_gmem_m_axi_U->RID(m_axi_gmem_RID);
    matrixmul_gmem_m_axi_U->RUSER(m_axi_gmem_RUSER);
    matrixmul_gmem_m_axi_U->RRESP(m_axi_gmem_RRESP);
    matrixmul_gmem_m_axi_U->BVALID(m_axi_gmem_BVALID);
    matrixmul_gmem_m_axi_U->BREADY(m_axi_gmem_BREADY);
    matrixmul_gmem_m_axi_U->BRESP(m_axi_gmem_BRESP);
    matrixmul_gmem_m_axi_U->BID(m_axi_gmem_BID);
    matrixmul_gmem_m_axi_U->BUSER(m_axi_gmem_BUSER);
    matrixmul_gmem_m_axi_U->ACLK(ap_clk);
    matrixmul_gmem_m_axi_U->ARESET(ap_rst_n_inv);
    matrixmul_gmem_m_axi_U->ACLK_EN(ap_var_for_const0);
    matrixmul_gmem_m_axi_U->I_ARVALID(gmem_ARVALID);
    matrixmul_gmem_m_axi_U->I_ARREADY(gmem_ARREADY);
    matrixmul_gmem_m_axi_U->I_ARADDR(gmem_ARADDR);
    matrixmul_gmem_m_axi_U->I_ARID(ap_var_for_const1);
    matrixmul_gmem_m_axi_U->I_ARLEN(ap_var_for_const2);
    matrixmul_gmem_m_axi_U->I_ARSIZE(ap_var_for_const3);
    matrixmul_gmem_m_axi_U->I_ARLOCK(ap_var_for_const4);
    matrixmul_gmem_m_axi_U->I_ARCACHE(ap_var_for_const5);
    matrixmul_gmem_m_axi_U->I_ARQOS(ap_var_for_const5);
    matrixmul_gmem_m_axi_U->I_ARPROT(ap_var_for_const3);
    matrixmul_gmem_m_axi_U->I_ARUSER(ap_var_for_const1);
    matrixmul_gmem_m_axi_U->I_ARBURST(ap_var_for_const4);
    matrixmul_gmem_m_axi_U->I_ARREGION(ap_var_for_const5);
    matrixmul_gmem_m_axi_U->I_RVALID(gmem_RVALID);
    matrixmul_gmem_m_axi_U->I_RREADY(gmem_RREADY);
    matrixmul_gmem_m_axi_U->I_RDATA(gmem_RDATA);
    matrixmul_gmem_m_axi_U->I_RID(gmem_RID);
    matrixmul_gmem_m_axi_U->I_RUSER(gmem_RUSER);
    matrixmul_gmem_m_axi_U->I_RRESP(gmem_RRESP);
    matrixmul_gmem_m_axi_U->I_RLAST(gmem_RLAST);
    matrixmul_gmem_m_axi_U->I_AWVALID(gmem_AWVALID);
    matrixmul_gmem_m_axi_U->I_AWREADY(gmem_AWREADY);
    matrixmul_gmem_m_axi_U->I_AWADDR(gmem_AWADDR);
    matrixmul_gmem_m_axi_U->I_AWID(ap_var_for_const1);
    matrixmul_gmem_m_axi_U->I_AWLEN(ap_var_for_const2);
    matrixmul_gmem_m_axi_U->I_AWSIZE(ap_var_for_const3);
    matrixmul_gmem_m_axi_U->I_AWLOCK(ap_var_for_const4);
    matrixmul_gmem_m_axi_U->I_AWCACHE(ap_var_for_const5);
    matrixmul_gmem_m_axi_U->I_AWQOS(ap_var_for_const5);
    matrixmul_gmem_m_axi_U->I_AWPROT(ap_var_for_const3);
    matrixmul_gmem_m_axi_U->I_AWUSER(ap_var_for_const1);
    matrixmul_gmem_m_axi_U->I_AWBURST(ap_var_for_const4);
    matrixmul_gmem_m_axi_U->I_AWREGION(ap_var_for_const5);
    matrixmul_gmem_m_axi_U->I_WVALID(gmem_WVALID);
    matrixmul_gmem_m_axi_U->I_WREADY(gmem_WREADY);
    matrixmul_gmem_m_axi_U->I_WDATA(tmp_1_3_reg_844);
    matrixmul_gmem_m_axi_U->I_WID(ap_var_for_const1);
    matrixmul_gmem_m_axi_U->I_WUSER(ap_var_for_const1);
    matrixmul_gmem_m_axi_U->I_WLAST(ap_var_for_const6);
    matrixmul_gmem_m_axi_U->I_WSTRB(ap_var_for_const7);
    matrixmul_gmem_m_axi_U->I_BVALID(gmem_BVALID);
    matrixmul_gmem_m_axi_U->I_BREADY(gmem_BREADY);
    matrixmul_gmem_m_axi_U->I_BRESP(gmem_BRESP);
    matrixmul_gmem_m_axi_U->I_BID(gmem_BID);
    matrixmul_gmem_m_axi_U->I_BUSER(gmem_BUSER);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A1_fu_303_p4);
    sensitive << ( A );

    SC_METHOD(thread_A2_sum7_fu_409_p2);
    sensitive << ( tmp_4_reg_641 );
    sensitive << ( tmp_9_fu_401_p3 );

    SC_METHOD(thread_A2_sum8_fu_461_p2);
    sensitive << ( tmp_4_reg_641 );
    sensitive << ( tmp_2_fu_453_p3 );

    SC_METHOD(thread_A2_sum9_fu_513_p2);
    sensitive << ( tmp_4_reg_641 );
    sensitive << ( tmp_10_fu_505_p3 );

    SC_METHOD(thread_A2_sum_cast_fu_378_p1);
    sensitive << ( A2_sum_reg_684 );

    SC_METHOD(thread_A2_sum_fu_373_p2);
    sensitive << ( tmp_4_cast_reg_648 );
    sensitive << ( tmp_7_cast_fu_369_p1 );

    SC_METHOD(thread_B4_sum1_cast_fu_472_p1);
    sensitive << ( B4_sum1_reg_712 );

    SC_METHOD(thread_B4_sum1_fu_443_p2);
    sensitive << ( tmp_1_cast_reg_633 );
    sensitive << ( tmp_16_cast_fu_439_p1 );

    SC_METHOD(thread_B4_sum2_cast_fu_524_p1);
    sensitive << ( B4_sum2_reg_735 );

    SC_METHOD(thread_B4_sum2_fu_495_p2);
    sensitive << ( tmp_1_cast_reg_633 );
    sensitive << ( tmp_17_cast_fu_491_p1 );

    SC_METHOD(thread_B4_sum3_cast_fu_570_p1);
    sensitive << ( B4_sum3_reg_752 );

    SC_METHOD(thread_B4_sum3_fu_555_p2);
    sensitive << ( tmp_1_cast_reg_633 );
    sensitive << ( tmp_18_cast_fu_551_p1 );

    SC_METHOD(thread_B4_sum_cast_fu_420_p1);
    sensitive << ( B4_sum_reg_695 );

    SC_METHOD(thread_B4_sum_fu_391_p2);
    sensitive << ( tmp_1_cast_reg_633 );
    sensitive << ( tmp_2_cast_fu_388_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state19_io );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state3_io );
    sensitive << ( ap_block_state19_io );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state20_io );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state20_io );

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage3_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage4_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage5_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state7_io );

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state7_io );

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage6_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state8_io );

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_block_state8_io );

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_01001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( gmem_BVALID );

    SC_METHOD(thread_ap_block_pp0_stage7_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( gmem_BVALID );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );
    sensitive << ( gmem_RVALID );
    sensitive << ( gmem_BVALID );
    sensitive << ( ap_block_state9_io );

    SC_METHOD(thread_ap_block_state10_io);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter1);
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_state12_pp0_stage2_iter1);
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_state13_pp0_stage3_iter1);
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_state14_pp0_stage4_iter1);
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_state15_pp0_stage5_iter1);
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_state16_pp0_stage6_iter1);
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_state17_pp0_stage7_iter1);
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state19_io);
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );
    sensitive << ( ap_sig_ioackin_gmem_AWREADY );

    SC_METHOD(thread_ap_block_state19_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state20_io);
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );
    sensitive << ( ap_sig_ioackin_gmem_WREADY );

    SC_METHOD(thread_ap_block_state20_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state21_pp0_stage3_iter2);

    SC_METHOD(thread_ap_block_state22_pp0_stage4_iter2);

    SC_METHOD(thread_ap_block_state23_pp0_stage5_iter2);

    SC_METHOD(thread_ap_block_state24_pp0_stage6_iter2);

    SC_METHOD(thread_ap_block_state25_pp0_stage7_iter2);
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );
    sensitive << ( gmem_BVALID );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_io);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_io);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_io);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_io);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_1023);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );

    SC_METHOD(thread_ap_condition_1027);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );

    SC_METHOD(thread_ap_condition_613);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_01001 );

    SC_METHOD(thread_ap_condition_624);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_01001 );

    SC_METHOD(thread_ap_condition_636);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_01001 );

    SC_METHOD(thread_ap_condition_648);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_01001 );

    SC_METHOD(thread_ap_condition_660);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_01001 );

    SC_METHOD(thread_ap_condition_672);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_01001 );

    SC_METHOD(thread_ap_condition_685);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_01001 );

    SC_METHOD(thread_ap_condition_696);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_321_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_257_p4);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( i_reg_253 );
    sensitive << ( tmp_mid2_v_reg_670 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_246_p4);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_242 );
    sensitive << ( indvar_flatten_next_reg_657 );

    SC_METHOD(thread_ap_phi_mux_j_phi_fu_268_p4);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( j_reg_264 );
    sensitive << ( j_1_reg_762 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_gmem_ARREADY);
    sensitive << ( gmem_ARREADY );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_AWREADY);
    sensitive << ( gmem_AWREADY );
    sensitive << ( ap_reg_ioackin_gmem_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_WREADY);
    sensitive << ( gmem_WREADY );
    sensitive << ( ap_reg_ioackin_gmem_WREADY );

    SC_METHOD(thread_exitcond_flatten_fu_321_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_246_p4 );

    SC_METHOD(thread_exitcond_fu_339_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_321_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_j_phi_fu_268_p4 );

    SC_METHOD(thread_gmem_ARADDR);
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( gmem_addr_1_reg_700 );
    sensitive << ( gmem_addr_2_reg_717 );
    sensitive << ( gmem_addr_3_reg_740 );
    sensitive << ( A2_sum_cast_fu_378_p1 );
    sensitive << ( B4_sum_cast_fu_420_p1 );
    sensitive << ( B4_sum1_cast_fu_472_p1 );
    sensitive << ( B4_sum2_cast_fu_524_p1 );
    sensitive << ( B4_sum3_cast_fu_570_p1 );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );
    sensitive << ( ap_condition_613 );
    sensitive << ( ap_condition_624 );
    sensitive << ( ap_condition_636 );
    sensitive << ( ap_condition_648 );
    sensitive << ( ap_condition_660 );
    sensitive << ( ap_condition_672 );
    sensitive << ( ap_condition_685 );
    sensitive << ( ap_condition_696 );

    SC_METHOD(thread_gmem_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );
    sensitive << ( ap_block_pp0_stage1_01001 );
    sensitive << ( ap_block_pp0_stage2_01001 );
    sensitive << ( ap_block_pp0_stage3_01001 );
    sensitive << ( ap_block_pp0_stage4_01001 );
    sensitive << ( ap_block_pp0_stage5_01001 );
    sensitive << ( ap_block_pp0_stage6_01001 );
    sensitive << ( ap_block_pp0_stage7_01001 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_gmem_AWADDR);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );
    sensitive << ( out6_sum_cast_fu_604_p1 );
    sensitive << ( ap_block_pp0_stage1_01001 );
    sensitive << ( ap_reg_ioackin_gmem_AWREADY );

    SC_METHOD(thread_gmem_AWVALID);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage1_01001 );
    sensitive << ( ap_reg_ioackin_gmem_AWREADY );

    SC_METHOD(thread_gmem_BREADY);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_gmem_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_gmem_WVALID);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage2_01001 );
    sensitive << ( ap_reg_ioackin_gmem_WREADY );

    SC_METHOD(thread_gmem_blk_n_AR);
    sensitive << ( m_axi_gmem_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );

    SC_METHOD(thread_gmem_blk_n_AW);
    sensitive << ( m_axi_gmem_AWREADY );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );

    SC_METHOD(thread_gmem_blk_n_B);
    sensitive << ( m_axi_gmem_BVALID );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );

    SC_METHOD(thread_gmem_blk_n_R);
    sensitive << ( m_axi_gmem_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );

    SC_METHOD(thread_gmem_blk_n_W);
    sensitive << ( m_axi_gmem_WREADY );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_653_pp0_iter2_reg );

    SC_METHOD(thread_i_1_fu_333_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_257_p4 );

    SC_METHOD(thread_indvar_flatten_next_fu_327_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_246_p4 );

    SC_METHOD(thread_j_1_fu_565_p2);
    sensitive << ( j_mid2_reg_662 );

    SC_METHOD(thread_j_mid2_fu_345_p3);
    sensitive << ( ap_phi_mux_j_phi_fu_268_p4 );
    sensitive << ( exitcond_fu_339_p2 );

    SC_METHOD(thread_out6_sum_cast_fu_604_p1);
    sensitive << ( out6_sum_reg_828 );

    SC_METHOD(thread_out6_sum_fu_595_p2);
    sensitive << ( tmp_cast_reg_628 );
    sensitive << ( tmp_19_cast_fu_592_p1 );

    SC_METHOD(thread_tmp1_fu_614_p2);
    sensitive << ( tmp_6_reg_783 );
    sensitive << ( tmp_6_1_reg_798 );

    SC_METHOD(thread_tmp2_fu_618_p2);
    sensitive << ( tmp_6_2_reg_813 );
    sensitive << ( tmp_6_3_reg_833 );

    SC_METHOD(thread_tmp_10_fu_505_p3);
    sensitive << ( tmp_7_fu_500_p2 );

    SC_METHOD(thread_tmp_11_fu_540_p2);
    sensitive << ( tmp_7_cast1_fu_537_p1 );
    sensitive << ( tmp_mid2_cast_fu_534_p1 );

    SC_METHOD(thread_tmp_12_fu_433_p2);
    sensitive << ( tmp_2_cast2_fu_430_p1 );

    SC_METHOD(thread_tmp_13_fu_485_p2);
    sensitive << ( tmp_2_cast1_fu_482_p1 );

    SC_METHOD(thread_tmp_14_fu_546_p2);
    sensitive << ( tmp_2_cast1_reg_729 );

    SC_METHOD(thread_tmp_15_fu_560_p2);
    sensitive << ( tmp_2_cast1_reg_729 );
    sensitive << ( tmp_11_fu_540_p2 );

    SC_METHOD(thread_tmp_16_cast_fu_439_p1);
    sensitive << ( tmp_12_fu_433_p2 );

    SC_METHOD(thread_tmp_17_cast_fu_491_p1);
    sensitive << ( tmp_13_fu_485_p2 );

    SC_METHOD(thread_tmp_18_cast_fu_551_p1);
    sensitive << ( tmp_14_fu_546_p2 );

    SC_METHOD(thread_tmp_19_cast_fu_592_p1);
    sensitive << ( tmp_15_reg_757_pp0_iter1_reg );

    SC_METHOD(thread_tmp_1_3_fu_622_p2);
    sensitive << ( tmp2_fu_618_p2 );
    sensitive << ( tmp1_fu_614_p2 );

    SC_METHOD(thread_tmp_1_cast_fu_299_p1);
    sensitive << ( tmp_1_fu_289_p4 );

    SC_METHOD(thread_tmp_1_fu_289_p4);
    sensitive << ( B );

    SC_METHOD(thread_tmp_2_cast1_fu_482_p1);
    sensitive << ( j_mid2_reg_662 );

    SC_METHOD(thread_tmp_2_cast2_fu_430_p1);
    sensitive << ( j_mid2_reg_662 );

    SC_METHOD(thread_tmp_2_cast_fu_388_p1);
    sensitive << ( j_mid2_reg_662 );

    SC_METHOD(thread_tmp_2_fu_453_p3);
    sensitive << ( tmp_s_fu_448_p2 );

    SC_METHOD(thread_tmp_4_cast_fu_317_p1);
    sensitive << ( A1_fu_303_p4 );

    SC_METHOD(thread_tmp_4_fu_313_p1);
    sensitive << ( A1_fu_303_p4 );

    SC_METHOD(thread_tmp_5_fu_361_p3);
    sensitive << ( tmp_mid2_v_fu_353_p3 );

    SC_METHOD(thread_tmp_6_1_fu_584_p2);
    sensitive << ( gmem_addr_1_read_reg_788 );
    sensitive << ( gmem_addr_5_read_reg_793 );

    SC_METHOD(thread_tmp_6_2_fu_588_p2);
    sensitive << ( gmem_addr_2_read_reg_803 );
    sensitive << ( gmem_addr_6_read_reg_808 );

    SC_METHOD(thread_tmp_6_3_fu_600_p2);
    sensitive << ( gmem_addr_3_read_reg_818 );
    sensitive << ( gmem_addr_7_read_reg_823 );

    SC_METHOD(thread_tmp_6_fu_580_p2);
    sensitive << ( gmem_addr_read_reg_773 );
    sensitive << ( gmem_addr_4_read_reg_778 );

    SC_METHOD(thread_tmp_7_cast1_fu_537_p1);
    sensitive << ( tmp_5_reg_676 );

    SC_METHOD(thread_tmp_7_cast_fu_369_p1);
    sensitive << ( tmp_5_fu_361_p3 );

    SC_METHOD(thread_tmp_7_fu_500_p2);
    sensitive << ( tmp_5_reg_676 );

    SC_METHOD(thread_tmp_8_fu_396_p2);
    sensitive << ( tmp_5_reg_676 );

    SC_METHOD(thread_tmp_9_fu_401_p3);
    sensitive << ( tmp_8_fu_396_p2 );

    SC_METHOD(thread_tmp_cast_fu_285_p1);
    sensitive << ( tmp_fu_275_p4 );

    SC_METHOD(thread_tmp_fu_275_p4);
    sensitive << ( out_r );

    SC_METHOD(thread_tmp_mid2_cast_fu_534_p1);
    sensitive << ( tmp_mid2_v_reg_670 );

    SC_METHOD(thread_tmp_mid2_v_fu_353_p3);
    sensitive << ( ap_phi_mux_i_phi_fu_257_p4 );
    sensitive << ( exitcond_fu_339_p2 );
    sensitive << ( i_1_fu_333_p2 );

    SC_METHOD(thread_tmp_s_fu_448_p2);
    sensitive << ( tmp_5_reg_676 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_fu_321_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const7);

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_reg_ioackin_gmem_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixmul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem_AWVALID, "(port)m_axi_gmem_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_AWREADY, "(port)m_axi_gmem_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_AWADDR, "(port)m_axi_gmem_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_AWID, "(port)m_axi_gmem_AWID");
    sc_trace(mVcdFile, m_axi_gmem_AWLEN, "(port)m_axi_gmem_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_AWSIZE, "(port)m_axi_gmem_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_AWBURST, "(port)m_axi_gmem_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_AWLOCK, "(port)m_axi_gmem_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_AWCACHE, "(port)m_axi_gmem_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_AWPROT, "(port)m_axi_gmem_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_AWQOS, "(port)m_axi_gmem_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_AWREGION, "(port)m_axi_gmem_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_AWUSER, "(port)m_axi_gmem_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_WVALID, "(port)m_axi_gmem_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_WREADY, "(port)m_axi_gmem_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_WDATA, "(port)m_axi_gmem_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_WSTRB, "(port)m_axi_gmem_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_WLAST, "(port)m_axi_gmem_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_WID, "(port)m_axi_gmem_WID");
    sc_trace(mVcdFile, m_axi_gmem_WUSER, "(port)m_axi_gmem_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_ARVALID, "(port)m_axi_gmem_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_ARREADY, "(port)m_axi_gmem_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_ARADDR, "(port)m_axi_gmem_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_ARID, "(port)m_axi_gmem_ARID");
    sc_trace(mVcdFile, m_axi_gmem_ARLEN, "(port)m_axi_gmem_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_ARSIZE, "(port)m_axi_gmem_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_ARBURST, "(port)m_axi_gmem_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_ARLOCK, "(port)m_axi_gmem_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_ARCACHE, "(port)m_axi_gmem_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_ARPROT, "(port)m_axi_gmem_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_ARQOS, "(port)m_axi_gmem_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_ARREGION, "(port)m_axi_gmem_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_ARUSER, "(port)m_axi_gmem_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_RVALID, "(port)m_axi_gmem_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_RREADY, "(port)m_axi_gmem_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_RDATA, "(port)m_axi_gmem_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_RLAST, "(port)m_axi_gmem_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_RID, "(port)m_axi_gmem_RID");
    sc_trace(mVcdFile, m_axi_gmem_RUSER, "(port)m_axi_gmem_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_RRESP, "(port)m_axi_gmem_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_BVALID, "(port)m_axi_gmem_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_BREADY, "(port)m_axi_gmem_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_BRESP, "(port)m_axi_gmem_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_BID, "(port)m_axi_gmem_BID");
    sc_trace(mVcdFile, m_axi_gmem_BUSER, "(port)m_axi_gmem_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, A, "A");
    sc_trace(mVcdFile, B, "B");
    sc_trace(mVcdFile, out_r, "out_r");
    sc_trace(mVcdFile, gmem_blk_n_AR, "gmem_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, exitcond_flatten_reg_653, "exitcond_flatten_reg_653");
    sc_trace(mVcdFile, gmem_blk_n_R, "gmem_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, exitcond_flatten_reg_653_pp0_iter1_reg, "exitcond_flatten_reg_653_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, gmem_blk_n_AW, "gmem_blk_n_AW");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, exitcond_flatten_reg_653_pp0_iter2_reg, "exitcond_flatten_reg_653_pp0_iter2_reg");
    sc_trace(mVcdFile, gmem_blk_n_W, "gmem_blk_n_W");
    sc_trace(mVcdFile, gmem_blk_n_B, "gmem_blk_n_B");
    sc_trace(mVcdFile, gmem_AWVALID, "gmem_AWVALID");
    sc_trace(mVcdFile, gmem_AWREADY, "gmem_AWREADY");
    sc_trace(mVcdFile, gmem_AWADDR, "gmem_AWADDR");
    sc_trace(mVcdFile, gmem_WVALID, "gmem_WVALID");
    sc_trace(mVcdFile, gmem_WREADY, "gmem_WREADY");
    sc_trace(mVcdFile, gmem_ARVALID, "gmem_ARVALID");
    sc_trace(mVcdFile, gmem_ARREADY, "gmem_ARREADY");
    sc_trace(mVcdFile, gmem_ARADDR, "gmem_ARADDR");
    sc_trace(mVcdFile, gmem_RVALID, "gmem_RVALID");
    sc_trace(mVcdFile, gmem_RREADY, "gmem_RREADY");
    sc_trace(mVcdFile, gmem_RDATA, "gmem_RDATA");
    sc_trace(mVcdFile, gmem_RLAST, "gmem_RLAST");
    sc_trace(mVcdFile, gmem_RID, "gmem_RID");
    sc_trace(mVcdFile, gmem_RUSER, "gmem_RUSER");
    sc_trace(mVcdFile, gmem_RRESP, "gmem_RRESP");
    sc_trace(mVcdFile, gmem_BVALID, "gmem_BVALID");
    sc_trace(mVcdFile, gmem_BREADY, "gmem_BREADY");
    sc_trace(mVcdFile, gmem_BRESP, "gmem_BRESP");
    sc_trace(mVcdFile, gmem_BID, "gmem_BID");
    sc_trace(mVcdFile, gmem_BUSER, "gmem_BUSER");
    sc_trace(mVcdFile, indvar_flatten_reg_242, "indvar_flatten_reg_242");
    sc_trace(mVcdFile, i_reg_253, "i_reg_253");
    sc_trace(mVcdFile, j_reg_264, "j_reg_264");
    sc_trace(mVcdFile, tmp_cast_fu_285_p1, "tmp_cast_fu_285_p1");
    sc_trace(mVcdFile, tmp_cast_reg_628, "tmp_cast_reg_628");
    sc_trace(mVcdFile, tmp_1_cast_fu_299_p1, "tmp_1_cast_fu_299_p1");
    sc_trace(mVcdFile, tmp_1_cast_reg_633, "tmp_1_cast_reg_633");
    sc_trace(mVcdFile, tmp_4_fu_313_p1, "tmp_4_fu_313_p1");
    sc_trace(mVcdFile, tmp_4_reg_641, "tmp_4_reg_641");
    sc_trace(mVcdFile, tmp_4_cast_fu_317_p1, "tmp_4_cast_fu_317_p1");
    sc_trace(mVcdFile, tmp_4_cast_reg_648, "tmp_4_cast_reg_648");
    sc_trace(mVcdFile, exitcond_flatten_fu_321_p2, "exitcond_flatten_fu_321_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_ARREADY, "ap_sig_ioackin_gmem_ARREADY");
    sc_trace(mVcdFile, ap_block_state10_io, "ap_block_state10_io");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter2, "ap_block_state18_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_327_p2, "indvar_flatten_next_fu_327_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_657, "indvar_flatten_next_reg_657");
    sc_trace(mVcdFile, j_mid2_fu_345_p3, "j_mid2_fu_345_p3");
    sc_trace(mVcdFile, j_mid2_reg_662, "j_mid2_reg_662");
    sc_trace(mVcdFile, tmp_mid2_v_fu_353_p3, "tmp_mid2_v_fu_353_p3");
    sc_trace(mVcdFile, tmp_mid2_v_reg_670, "tmp_mid2_v_reg_670");
    sc_trace(mVcdFile, tmp_5_fu_361_p3, "tmp_5_fu_361_p3");
    sc_trace(mVcdFile, tmp_5_reg_676, "tmp_5_reg_676");
    sc_trace(mVcdFile, A2_sum_fu_373_p2, "A2_sum_fu_373_p2");
    sc_trace(mVcdFile, A2_sum_reg_684, "A2_sum_reg_684");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state3_io, "ap_block_state3_io");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter1, "ap_block_state11_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage1_iter2, "ap_block_state19_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_AWREADY, "ap_sig_ioackin_gmem_AWREADY");
    sc_trace(mVcdFile, ap_block_state19_io, "ap_block_state19_io");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, B4_sum_fu_391_p2, "B4_sum_fu_391_p2");
    sc_trace(mVcdFile, B4_sum_reg_695, "B4_sum_reg_695");
    sc_trace(mVcdFile, gmem_addr_1_reg_700, "gmem_addr_1_reg_700");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage2_iter1, "ap_block_state12_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage2_iter2, "ap_block_state20_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_WREADY, "ap_sig_ioackin_gmem_WREADY");
    sc_trace(mVcdFile, ap_block_state20_io, "ap_block_state20_io");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, B4_sum1_fu_443_p2, "B4_sum1_fu_443_p2");
    sc_trace(mVcdFile, B4_sum1_reg_712, "B4_sum1_reg_712");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage3_iter1, "ap_block_state13_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage3_iter2, "ap_block_state21_pp0_stage3_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, gmem_addr_2_reg_717, "gmem_addr_2_reg_717");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage4_iter1, "ap_block_state14_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage4_iter2, "ap_block_state22_pp0_stage4_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, tmp_2_cast1_fu_482_p1, "tmp_2_cast1_fu_482_p1");
    sc_trace(mVcdFile, tmp_2_cast1_reg_729, "tmp_2_cast1_reg_729");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_state7_io, "ap_block_state7_io");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage5_iter1, "ap_block_state15_pp0_stage5_iter1");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage5_iter2, "ap_block_state23_pp0_stage5_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, B4_sum2_fu_495_p2, "B4_sum2_fu_495_p2");
    sc_trace(mVcdFile, B4_sum2_reg_735, "B4_sum2_reg_735");
    sc_trace(mVcdFile, gmem_addr_3_reg_740, "gmem_addr_3_reg_740");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_state8_io, "ap_block_state8_io");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage6_iter1, "ap_block_state16_pp0_stage6_iter1");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage6_iter2, "ap_block_state24_pp0_stage6_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, B4_sum3_fu_555_p2, "B4_sum3_fu_555_p2");
    sc_trace(mVcdFile, B4_sum3_reg_752, "B4_sum3_reg_752");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_state9_io, "ap_block_state9_io");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage7_iter1, "ap_block_state17_pp0_stage7_iter1");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage7_iter2, "ap_block_state25_pp0_stage7_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, tmp_15_fu_560_p2, "tmp_15_fu_560_p2");
    sc_trace(mVcdFile, tmp_15_reg_757, "tmp_15_reg_757");
    sc_trace(mVcdFile, tmp_15_reg_757_pp0_iter1_reg, "tmp_15_reg_757_pp0_iter1_reg");
    sc_trace(mVcdFile, j_1_fu_565_p2, "j_1_fu_565_p2");
    sc_trace(mVcdFile, j_1_reg_762, "j_1_reg_762");
    sc_trace(mVcdFile, gmem_addr_read_reg_773, "gmem_addr_read_reg_773");
    sc_trace(mVcdFile, gmem_addr_4_read_reg_778, "gmem_addr_4_read_reg_778");
    sc_trace(mVcdFile, tmp_6_fu_580_p2, "tmp_6_fu_580_p2");
    sc_trace(mVcdFile, tmp_6_reg_783, "tmp_6_reg_783");
    sc_trace(mVcdFile, gmem_addr_1_read_reg_788, "gmem_addr_1_read_reg_788");
    sc_trace(mVcdFile, gmem_addr_5_read_reg_793, "gmem_addr_5_read_reg_793");
    sc_trace(mVcdFile, tmp_6_1_fu_584_p2, "tmp_6_1_fu_584_p2");
    sc_trace(mVcdFile, tmp_6_1_reg_798, "tmp_6_1_reg_798");
    sc_trace(mVcdFile, gmem_addr_2_read_reg_803, "gmem_addr_2_read_reg_803");
    sc_trace(mVcdFile, gmem_addr_6_read_reg_808, "gmem_addr_6_read_reg_808");
    sc_trace(mVcdFile, tmp_6_2_fu_588_p2, "tmp_6_2_fu_588_p2");
    sc_trace(mVcdFile, tmp_6_2_reg_813, "tmp_6_2_reg_813");
    sc_trace(mVcdFile, gmem_addr_3_read_reg_818, "gmem_addr_3_read_reg_818");
    sc_trace(mVcdFile, gmem_addr_7_read_reg_823, "gmem_addr_7_read_reg_823");
    sc_trace(mVcdFile, out6_sum_fu_595_p2, "out6_sum_fu_595_p2");
    sc_trace(mVcdFile, out6_sum_reg_828, "out6_sum_reg_828");
    sc_trace(mVcdFile, tmp_6_3_fu_600_p2, "tmp_6_3_fu_600_p2");
    sc_trace(mVcdFile, tmp_6_3_reg_833, "tmp_6_3_reg_833");
    sc_trace(mVcdFile, tmp_1_3_fu_622_p2, "tmp_1_3_fu_622_p2");
    sc_trace(mVcdFile, tmp_1_3_reg_844, "tmp_1_3_reg_844");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_246_p4, "ap_phi_mux_indvar_flatten_phi_fu_246_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_257_p4, "ap_phi_mux_i_phi_fu_257_p4");
    sc_trace(mVcdFile, ap_phi_mux_j_phi_fu_268_p4, "ap_phi_mux_j_phi_fu_268_p4");
    sc_trace(mVcdFile, A2_sum_cast_fu_378_p1, "A2_sum_cast_fu_378_p1");
    sc_trace(mVcdFile, A2_sum7_fu_409_p2, "A2_sum7_fu_409_p2");
    sc_trace(mVcdFile, B4_sum_cast_fu_420_p1, "B4_sum_cast_fu_420_p1");
    sc_trace(mVcdFile, A2_sum8_fu_461_p2, "A2_sum8_fu_461_p2");
    sc_trace(mVcdFile, B4_sum1_cast_fu_472_p1, "B4_sum1_cast_fu_472_p1");
    sc_trace(mVcdFile, A2_sum9_fu_513_p2, "A2_sum9_fu_513_p2");
    sc_trace(mVcdFile, B4_sum2_cast_fu_524_p1, "B4_sum2_cast_fu_524_p1");
    sc_trace(mVcdFile, B4_sum3_cast_fu_570_p1, "B4_sum3_cast_fu_570_p1");
    sc_trace(mVcdFile, out6_sum_cast_fu_604_p1, "out6_sum_cast_fu_604_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_ARREADY, "ap_reg_ioackin_gmem_ARREADY");
    sc_trace(mVcdFile, ap_block_pp0_stage1_01001, "ap_block_pp0_stage1_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage2_01001, "ap_block_pp0_stage2_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage3_01001, "ap_block_pp0_stage3_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage4_01001, "ap_block_pp0_stage4_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage5_01001, "ap_block_pp0_stage5_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage6_01001, "ap_block_pp0_stage6_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage7_01001, "ap_block_pp0_stage7_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_AWREADY, "ap_reg_ioackin_gmem_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_WREADY, "ap_reg_ioackin_gmem_WREADY");
    sc_trace(mVcdFile, tmp_fu_275_p4, "tmp_fu_275_p4");
    sc_trace(mVcdFile, tmp_1_fu_289_p4, "tmp_1_fu_289_p4");
    sc_trace(mVcdFile, A1_fu_303_p4, "A1_fu_303_p4");
    sc_trace(mVcdFile, exitcond_fu_339_p2, "exitcond_fu_339_p2");
    sc_trace(mVcdFile, i_1_fu_333_p2, "i_1_fu_333_p2");
    sc_trace(mVcdFile, tmp_7_cast_fu_369_p1, "tmp_7_cast_fu_369_p1");
    sc_trace(mVcdFile, tmp_2_cast_fu_388_p1, "tmp_2_cast_fu_388_p1");
    sc_trace(mVcdFile, tmp_8_fu_396_p2, "tmp_8_fu_396_p2");
    sc_trace(mVcdFile, tmp_9_fu_401_p3, "tmp_9_fu_401_p3");
    sc_trace(mVcdFile, tmp_2_cast2_fu_430_p1, "tmp_2_cast2_fu_430_p1");
    sc_trace(mVcdFile, tmp_12_fu_433_p2, "tmp_12_fu_433_p2");
    sc_trace(mVcdFile, tmp_16_cast_fu_439_p1, "tmp_16_cast_fu_439_p1");
    sc_trace(mVcdFile, tmp_s_fu_448_p2, "tmp_s_fu_448_p2");
    sc_trace(mVcdFile, tmp_2_fu_453_p3, "tmp_2_fu_453_p3");
    sc_trace(mVcdFile, tmp_13_fu_485_p2, "tmp_13_fu_485_p2");
    sc_trace(mVcdFile, tmp_17_cast_fu_491_p1, "tmp_17_cast_fu_491_p1");
    sc_trace(mVcdFile, tmp_7_fu_500_p2, "tmp_7_fu_500_p2");
    sc_trace(mVcdFile, tmp_10_fu_505_p3, "tmp_10_fu_505_p3");
    sc_trace(mVcdFile, tmp_7_cast1_fu_537_p1, "tmp_7_cast1_fu_537_p1");
    sc_trace(mVcdFile, tmp_mid2_cast_fu_534_p1, "tmp_mid2_cast_fu_534_p1");
    sc_trace(mVcdFile, tmp_14_fu_546_p2, "tmp_14_fu_546_p2");
    sc_trace(mVcdFile, tmp_18_cast_fu_551_p1, "tmp_18_cast_fu_551_p1");
    sc_trace(mVcdFile, tmp_11_fu_540_p2, "tmp_11_fu_540_p2");
    sc_trace(mVcdFile, tmp_19_cast_fu_592_p1, "tmp_19_cast_fu_592_p1");
    sc_trace(mVcdFile, tmp2_fu_618_p2, "tmp2_fu_618_p2");
    sc_trace(mVcdFile, tmp1_fu_614_p2, "tmp1_fu_614_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_1023, "ap_condition_1023");
    sc_trace(mVcdFile, ap_condition_1027, "ap_condition_1027");
    sc_trace(mVcdFile, ap_condition_613, "ap_condition_613");
    sc_trace(mVcdFile, ap_condition_624, "ap_condition_624");
    sc_trace(mVcdFile, ap_condition_636, "ap_condition_636");
    sc_trace(mVcdFile, ap_condition_648, "ap_condition_648");
    sc_trace(mVcdFile, ap_condition_660, "ap_condition_660");
    sc_trace(mVcdFile, ap_condition_672, "ap_condition_672");
    sc_trace(mVcdFile, ap_condition_685, "ap_condition_685");
    sc_trace(mVcdFile, ap_condition_696, "ap_condition_696");
#endif

    }
    mHdltvinHandle.open("matrixmul.hdltvin.dat");
    mHdltvoutHandle.open("matrixmul.hdltvout.dat");
}

matrixmul::~matrixmul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matrixmul_AXILiteS_s_axi_U;
    delete matrixmul_gmem_m_axi_U;
}

void matrixmul::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void matrixmul::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void matrixmul::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void matrixmul::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void matrixmul::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void matrixmul::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void matrixmul::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void matrixmul::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv4_F;
}

void matrixmul::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage3_01001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage5_01001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage6_01001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage7_01001.read(), ap_const_boolean_0)) || 
                    (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_gmem_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_1023.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, gmem_AWREADY.read()))) {
                ap_reg_ioackin_gmem_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_WREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_1027.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_gmem_WREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, gmem_WREADY.read()))) {
                ap_reg_ioackin_gmem_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_253 = tmp_mid2_v_reg_670.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_253 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_242 = indvar_flatten_next_reg_657.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_242 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        j_reg_264 = j_1_reg_762.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_264 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_321_p2.read()))) {
        A2_sum_reg_684 = A2_sum_fu_373_p2.read();
        j_mid2_reg_662 = j_mid2_fu_345_p3.read();
        tmp_5_reg_676 = tmp_5_fu_361_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        B4_sum1_reg_712 = B4_sum1_fu_443_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        B4_sum2_reg_735 = B4_sum2_fu_495_p2.read();
        tmp_2_cast1_reg_729 = tmp_2_cast1_fu_482_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        B4_sum3_reg_752 = B4_sum3_fu_555_p2.read();
        tmp_15_reg_757 = tmp_15_fu_560_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        B4_sum_reg_695 = B4_sum_fu_391_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_653 = exitcond_flatten_fu_321_p2.read();
        exitcond_flatten_reg_653_pp0_iter1_reg = exitcond_flatten_reg_653.read();
        exitcond_flatten_reg_653_pp0_iter2_reg = exitcond_flatten_reg_653_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        gmem_addr_1_read_reg_788 = gmem_RDATA.read();
        tmp_6_reg_783 = tmp_6_fu_580_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        gmem_addr_1_reg_700 =  (sc_lv<32>) (A2_sum7_fu_409_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        gmem_addr_2_read_reg_803 = gmem_RDATA.read();
        tmp_6_1_reg_798 = tmp_6_1_fu_584_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        gmem_addr_2_reg_717 =  (sc_lv<32>) (A2_sum8_fu_461_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0))) {
        gmem_addr_3_read_reg_818 = gmem_RDATA.read();
        tmp_6_2_reg_813 = tmp_6_2_fu_588_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0))) {
        gmem_addr_3_reg_740 =  (sc_lv<32>) (A2_sum9_fu_513_p2.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        gmem_addr_4_read_reg_778 = gmem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        gmem_addr_5_read_reg_793 = gmem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        gmem_addr_6_read_reg_808 = gmem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        gmem_addr_7_read_reg_823 = gmem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        gmem_addr_read_reg_773 = gmem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_next_reg_657 = indvar_flatten_next_fu_327_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        j_1_reg_762 = j_1_fu_565_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out6_sum_reg_828 = out6_sum_fu_595_p2.read();
        tmp_6_3_reg_833 = tmp_6_3_fu_600_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        tmp_15_reg_757_pp0_iter1_reg = tmp_15_reg_757.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_1_3_reg_844 = tmp_1_3_fu_622_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_1_cast_reg_633 = tmp_1_cast_fu_299_p1.read();
        tmp_4_cast_reg_648 = tmp_4_cast_fu_317_p1.read();
        tmp_4_reg_641 = tmp_4_fu_313_p1.read();
        tmp_cast_reg_628 = tmp_cast_fu_285_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_321_p2.read()))) {
        tmp_mid2_v_reg_670 = tmp_mid2_v_fu_353_p3.read();
    }
}

void matrixmul::thread_A1_fu_303_p4() {
    A1_fu_303_p4 = A.read().range(31, 2);
}

void matrixmul::thread_A2_sum7_fu_409_p2() {
    A2_sum7_fu_409_p2 = (!tmp_9_fu_401_p3.read().is_01() || !tmp_4_reg_641.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_9_fu_401_p3.read()) + sc_biguint<64>(tmp_4_reg_641.read()));
}

void matrixmul::thread_A2_sum8_fu_461_p2() {
    A2_sum8_fu_461_p2 = (!tmp_2_fu_453_p3.read().is_01() || !tmp_4_reg_641.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_2_fu_453_p3.read()) + sc_biguint<64>(tmp_4_reg_641.read()));
}

void matrixmul::thread_A2_sum9_fu_513_p2() {
    A2_sum9_fu_513_p2 = (!tmp_10_fu_505_p3.read().is_01() || !tmp_4_reg_641.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp_10_fu_505_p3.read()) + sc_biguint<64>(tmp_4_reg_641.read()));
}

void matrixmul::thread_A2_sum_cast_fu_378_p1() {
    A2_sum_cast_fu_378_p1 = esl_zext<64,31>(A2_sum_reg_684.read());
}

void matrixmul::thread_A2_sum_fu_373_p2() {
    A2_sum_fu_373_p2 = (!tmp_7_cast_fu_369_p1.read().is_01() || !tmp_4_cast_reg_648.read().is_01())? sc_lv<31>(): (sc_biguint<31>(tmp_7_cast_fu_369_p1.read()) + sc_biguint<31>(tmp_4_cast_reg_648.read()));
}

void matrixmul::thread_B4_sum1_cast_fu_472_p1() {
    B4_sum1_cast_fu_472_p1 = esl_zext<64,31>(B4_sum1_reg_712.read());
}

void matrixmul::thread_B4_sum1_fu_443_p2() {
    B4_sum1_fu_443_p2 = (!tmp_16_cast_fu_439_p1.read().is_01() || !tmp_1_cast_reg_633.read().is_01())? sc_lv<31>(): (sc_biguint<31>(tmp_16_cast_fu_439_p1.read()) + sc_biguint<31>(tmp_1_cast_reg_633.read()));
}

void matrixmul::thread_B4_sum2_cast_fu_524_p1() {
    B4_sum2_cast_fu_524_p1 = esl_zext<64,31>(B4_sum2_reg_735.read());
}

void matrixmul::thread_B4_sum2_fu_495_p2() {
    B4_sum2_fu_495_p2 = (!tmp_17_cast_fu_491_p1.read().is_01() || !tmp_1_cast_reg_633.read().is_01())? sc_lv<31>(): (sc_biguint<31>(tmp_17_cast_fu_491_p1.read()) + sc_biguint<31>(tmp_1_cast_reg_633.read()));
}

void matrixmul::thread_B4_sum3_cast_fu_570_p1() {
    B4_sum3_cast_fu_570_p1 = esl_zext<64,31>(B4_sum3_reg_752.read());
}

void matrixmul::thread_B4_sum3_fu_555_p2() {
    B4_sum3_fu_555_p2 = (!tmp_18_cast_fu_551_p1.read().is_01() || !tmp_1_cast_reg_633.read().is_01())? sc_lv<31>(): (sc_biguint<31>(tmp_18_cast_fu_551_p1.read()) + sc_biguint<31>(tmp_1_cast_reg_633.read()));
}

void matrixmul::thread_B4_sum_cast_fu_420_p1() {
    B4_sum_cast_fu_420_p1 = esl_zext<64,31>(B4_sum_reg_695.read());
}

void matrixmul::thread_B4_sum_fu_391_p2() {
    B4_sum_fu_391_p2 = (!tmp_2_cast_fu_388_p1.read().is_01() || !tmp_1_cast_reg_633.read().is_01())? sc_lv<31>(): (sc_biguint<31>(tmp_2_cast_fu_388_p1.read()) + sc_biguint<31>(tmp_1_cast_reg_633.read()));
}

void matrixmul::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void matrixmul::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void matrixmul::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void matrixmul::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void matrixmul::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void matrixmul::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void matrixmul::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void matrixmul::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void matrixmul::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrixmul::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[9];
}

void matrixmul::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state10_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state10_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage1_01001() {
    ap_block_pp0_stage1_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state19_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state3_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state19_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage2_01001() {
    ap_block_pp0_stage2_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state20_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state20_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage3_01001() {
    ap_block_pp0_stage3_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage4_01001() {
    ap_block_pp0_stage4_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage5_01001() {
    ap_block_pp0_stage5_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state7_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state7_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage6_01001() {
    ap_block_pp0_stage6_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state8_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state8_io.read())));
}

void matrixmul::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_pp0_stage7_01001() {
    ap_block_pp0_stage7_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_BVALID.read())));
}

void matrixmul::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_BVALID.read())));
}

void matrixmul::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gmem_BVALID.read())));
}

void matrixmul::thread_ap_block_state10_io() {
    ap_block_state10_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_ARREADY.read()));
}

void matrixmul::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_state11_pp0_stage1_iter1() {
    ap_block_state11_pp0_stage1_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_state12_pp0_stage2_iter1() {
    ap_block_state12_pp0_stage2_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_state13_pp0_stage3_iter1() {
    ap_block_state13_pp0_stage3_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_state14_pp0_stage4_iter1() {
    ap_block_state14_pp0_stage4_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_state15_pp0_stage5_iter1() {
    ap_block_state15_pp0_stage5_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_state16_pp0_stage6_iter1() {
    ap_block_state16_pp0_stage6_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_state17_pp0_stage7_iter1() {
    ap_block_state17_pp0_stage7_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void matrixmul::thread_ap_block_state18_pp0_stage0_iter2() {
    ap_block_state18_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state19_io() {
    ap_block_state19_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_AWREADY.read()));
}

void matrixmul::thread_ap_block_state19_pp0_stage1_iter2() {
    ap_block_state19_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state20_io() {
    ap_block_state20_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_WREADY.read()));
}

void matrixmul::thread_ap_block_state20_pp0_stage2_iter2() {
    ap_block_state20_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state21_pp0_stage3_iter2() {
    ap_block_state21_pp0_stage3_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state22_pp0_stage4_iter2() {
    ap_block_state22_pp0_stage4_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state23_pp0_stage5_iter2() {
    ap_block_state23_pp0_stage5_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state24_pp0_stage6_iter2() {
    ap_block_state24_pp0_stage6_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state25_pp0_stage7_iter2() {
    ap_block_state25_pp0_stage7_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_BVALID.read()));
}

void matrixmul::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state3_io() {
    ap_block_state3_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_ARREADY.read()));
}

void matrixmul::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_ARREADY.read()));
}

void matrixmul::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_ARREADY.read()));
}

void matrixmul::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_ARREADY.read()));
}

void matrixmul::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state7_io() {
    ap_block_state7_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_ARREADY.read()));
}

void matrixmul::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state8_io() {
    ap_block_state8_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_ARREADY.read()));
}

void matrixmul::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_block_state9_io() {
    ap_block_state9_io = (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_gmem_ARREADY.read()));
}

void matrixmul::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void matrixmul::thread_ap_condition_1023() {
    ap_condition_1023 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()));
}

void matrixmul::thread_ap_condition_1027() {
    ap_condition_1027 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()));
}

void matrixmul::thread_ap_condition_613() {
    ap_condition_613 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0));
}

void matrixmul::thread_ap_condition_624() {
    ap_condition_624 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0));
}

void matrixmul::thread_ap_condition_636() {
    ap_condition_636 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_01001.read(), ap_const_boolean_0));
}

void matrixmul::thread_ap_condition_648() {
    ap_condition_648 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0));
}

void matrixmul::thread_ap_condition_660() {
    ap_condition_660 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_01001.read(), ap_const_boolean_0));
}

void matrixmul::thread_ap_condition_672() {
    ap_condition_672 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_01001.read(), ap_const_boolean_0));
}

void matrixmul::thread_ap_condition_685() {
    ap_condition_685 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_01001.read(), ap_const_boolean_0));
}

void matrixmul::thread_ap_condition_696() {
    ap_condition_696 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0));
}

void matrixmul::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_321_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void matrixmul::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_phi_mux_i_phi_fu_257_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_phi_fu_257_p4 = tmp_mid2_v_reg_670.read();
    } else {
        ap_phi_mux_i_phi_fu_257_p4 = i_reg_253.read();
    }
}

void matrixmul::thread_ap_phi_mux_indvar_flatten_phi_fu_246_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_246_p4 = indvar_flatten_next_reg_657.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_246_p4 = indvar_flatten_reg_242.read();
    }
}

void matrixmul::thread_ap_phi_mux_j_phi_fu_268_p4() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_phi_fu_268_p4 = j_1_reg_762.read();
    } else {
        ap_phi_mux_j_phi_fu_268_p4 = j_reg_264.read();
    }
}

void matrixmul::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void matrixmul::thread_ap_sig_ioackin_gmem_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) {
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY.read();
    } else {
        ap_sig_ioackin_gmem_ARREADY = ap_const_logic_1;
    }
}

void matrixmul::thread_ap_sig_ioackin_gmem_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_AWREADY.read())) {
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY.read();
    } else {
        ap_sig_ioackin_gmem_AWREADY = ap_const_logic_1;
    }
}

void matrixmul::thread_ap_sig_ioackin_gmem_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_WREADY.read())) {
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY.read();
    } else {
        ap_sig_ioackin_gmem_WREADY = ap_const_logic_1;
    }
}

void matrixmul::thread_exitcond_flatten_fu_321_p2() {
    exitcond_flatten_fu_321_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_246_p4.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_246_p4.read() == ap_const_lv4_F);
}

void matrixmul::thread_exitcond_fu_339_p2() {
    exitcond_fu_339_p2 = (!ap_phi_mux_j_phi_fu_268_p4.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_j_phi_fu_268_p4.read() == ap_const_lv3_5);
}

void matrixmul::thread_gmem_ARADDR() {
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()))) {
        if (esl_seteq<1,1,1>(ap_condition_696.read(), ap_const_boolean_1)) {
            gmem_ARADDR =  (sc_lv<32>) (B4_sum3_cast_fu_570_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_685.read(), ap_const_boolean_1)) {
            gmem_ARADDR = gmem_addr_3_reg_740.read();
        } else if (esl_seteq<1,1,1>(ap_condition_672.read(), ap_const_boolean_1)) {
            gmem_ARADDR =  (sc_lv<32>) (B4_sum2_cast_fu_524_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_660.read(), ap_const_boolean_1)) {
            gmem_ARADDR = gmem_addr_2_reg_717.read();
        } else if (esl_seteq<1,1,1>(ap_condition_648.read(), ap_const_boolean_1)) {
            gmem_ARADDR =  (sc_lv<32>) (B4_sum1_cast_fu_472_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_636.read(), ap_const_boolean_1)) {
            gmem_ARADDR = gmem_addr_1_reg_700.read();
        } else if (esl_seteq<1,1,1>(ap_condition_624.read(), ap_const_boolean_1)) {
            gmem_ARADDR =  (sc_lv<32>) (B4_sum_cast_fu_420_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_613.read(), ap_const_boolean_1)) {
            gmem_ARADDR =  (sc_lv<32>) (A2_sum_cast_fu_378_p1.read());
        } else {
            gmem_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        gmem_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void matrixmul::thread_gmem_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_01001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_01001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_01001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_01001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_01001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        gmem_ARVALID = ap_const_logic_1;
    } else {
        gmem_ARVALID = ap_const_logic_0;
    }
}

void matrixmul::thread_gmem_AWADDR() {
    gmem_AWADDR =  (sc_lv<32>) (out6_sum_cast_fu_604_p1.read());
}

void matrixmul::thread_gmem_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_AWREADY.read()))) {
        gmem_AWVALID = ap_const_logic_1;
    } else {
        gmem_AWVALID = ap_const_logic_0;
    }
}

void matrixmul::thread_gmem_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        gmem_BREADY = ap_const_logic_1;
    } else {
        gmem_BREADY = ap_const_logic_0;
    }
}

void matrixmul::thread_gmem_RREADY() {
    if (((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        gmem_RREADY = ap_const_logic_1;
    } else {
        gmem_RREADY = ap_const_logic_0;
    }
}

void matrixmul::thread_gmem_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_WREADY.read()))) {
        gmem_WVALID = ap_const_logic_1;
    } else {
        gmem_WVALID = ap_const_logic_0;
    }
}

void matrixmul::thread_gmem_blk_n_AR() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0)))) {
        gmem_blk_n_AR = m_axi_gmem_ARREADY.read();
    } else {
        gmem_blk_n_AR = ap_const_logic_1;
    }
}

void matrixmul::thread_gmem_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()))) {
        gmem_blk_n_AW = m_axi_gmem_AWREADY.read();
    } else {
        gmem_blk_n_AW = ap_const_logic_1;
    }
}

void matrixmul::thread_gmem_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()))) {
        gmem_blk_n_B = m_axi_gmem_BVALID.read();
    } else {
        gmem_blk_n_B = ap_const_logic_1;
    }
}

void matrixmul::thread_gmem_blk_n_R() {
    if (((esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0)))) {
        gmem_blk_n_R = m_axi_gmem_RVALID.read();
    } else {
        gmem_blk_n_R = ap_const_logic_1;
    }
}

void matrixmul::thread_gmem_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_653_pp0_iter2_reg.read()))) {
        gmem_blk_n_W = m_axi_gmem_WREADY.read();
    } else {
        gmem_blk_n_W = ap_const_logic_1;
    }
}

void matrixmul::thread_i_1_fu_333_p2() {
    i_1_fu_333_p2 = (!ap_phi_mux_i_phi_fu_257_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ap_phi_mux_i_phi_fu_257_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul::thread_indvar_flatten_next_fu_327_p2() {
    indvar_flatten_next_fu_327_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_246_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_indvar_flatten_phi_fu_246_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrixmul::thread_j_1_fu_565_p2() {
    j_1_fu_565_p2 = (!j_mid2_reg_662.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_mid2_reg_662.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrixmul::thread_j_mid2_fu_345_p3() {
    j_mid2_fu_345_p3 = (!exitcond_fu_339_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_339_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_j_phi_fu_268_p4.read());
}

void matrixmul::thread_out6_sum_cast_fu_604_p1() {
    out6_sum_cast_fu_604_p1 = esl_zext<64,31>(out6_sum_reg_828.read());
}

void matrixmul::thread_out6_sum_fu_595_p2() {
    out6_sum_fu_595_p2 = (!tmp_19_cast_fu_592_p1.read().is_01() || !tmp_cast_reg_628.read().is_01())? sc_lv<31>(): (sc_biguint<31>(tmp_19_cast_fu_592_p1.read()) + sc_biguint<31>(tmp_cast_reg_628.read()));
}

void matrixmul::thread_tmp1_fu_614_p2() {
    tmp1_fu_614_p2 = (!tmp_6_reg_783.read().is_01() || !tmp_6_1_reg_798.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_reg_783.read()) + sc_biguint<32>(tmp_6_1_reg_798.read()));
}

void matrixmul::thread_tmp2_fu_618_p2() {
    tmp2_fu_618_p2 = (!tmp_6_2_reg_813.read().is_01() || !tmp_6_3_reg_833.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_2_reg_813.read()) + sc_biguint<32>(tmp_6_3_reg_833.read()));
}

void matrixmul::thread_tmp_10_fu_505_p3() {
    tmp_10_fu_505_p3 = esl_concat<60,4>(ap_const_lv60_0, tmp_7_fu_500_p2.read());
}

void matrixmul::thread_tmp_11_fu_540_p2() {
    tmp_11_fu_540_p2 = (!tmp_7_cast1_fu_537_p1.read().is_01() || !tmp_mid2_cast_fu_534_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_7_cast1_fu_537_p1.read()) + sc_biguint<5>(tmp_mid2_cast_fu_534_p1.read()));
}

void matrixmul::thread_tmp_12_fu_433_p2() {
    tmp_12_fu_433_p2 = (!tmp_2_cast2_fu_430_p1.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_2_cast2_fu_430_p1.read()) + sc_biguint<4>(ap_const_lv4_5));
}

void matrixmul::thread_tmp_13_fu_485_p2() {
    tmp_13_fu_485_p2 = (!tmp_2_cast1_fu_482_p1.read().is_01() || !ap_const_lv5_A.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_2_cast1_fu_482_p1.read()) + sc_biguint<5>(ap_const_lv5_A));
}

void matrixmul::thread_tmp_14_fu_546_p2() {
    tmp_14_fu_546_p2 = (!tmp_2_cast1_reg_729.read().is_01() || !ap_const_lv5_F.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_2_cast1_reg_729.read()) + sc_biguint<5>(ap_const_lv5_F));
}

void matrixmul::thread_tmp_15_fu_560_p2() {
    tmp_15_fu_560_p2 = (!tmp_2_cast1_reg_729.read().is_01() || !tmp_11_fu_540_p2.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_2_cast1_reg_729.read()) + sc_biguint<5>(tmp_11_fu_540_p2.read()));
}

void matrixmul::thread_tmp_16_cast_fu_439_p1() {
    tmp_16_cast_fu_439_p1 = esl_zext<31,4>(tmp_12_fu_433_p2.read());
}

void matrixmul::thread_tmp_17_cast_fu_491_p1() {
    tmp_17_cast_fu_491_p1 = esl_zext<31,5>(tmp_13_fu_485_p2.read());
}

void matrixmul::thread_tmp_18_cast_fu_551_p1() {
    tmp_18_cast_fu_551_p1 = esl_zext<31,5>(tmp_14_fu_546_p2.read());
}

void matrixmul::thread_tmp_19_cast_fu_592_p1() {
    tmp_19_cast_fu_592_p1 = esl_zext<31,5>(tmp_15_reg_757_pp0_iter1_reg.read());
}

void matrixmul::thread_tmp_1_3_fu_622_p2() {
    tmp_1_3_fu_622_p2 = (!tmp2_fu_618_p2.read().is_01() || !tmp1_fu_614_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp2_fu_618_p2.read()) + sc_biguint<32>(tmp1_fu_614_p2.read()));
}

void matrixmul::thread_tmp_1_cast_fu_299_p1() {
    tmp_1_cast_fu_299_p1 = esl_zext<31,30>(tmp_1_fu_289_p4.read());
}

void matrixmul::thread_tmp_1_fu_289_p4() {
    tmp_1_fu_289_p4 = B.read().range(31, 2);
}

void matrixmul::thread_tmp_2_cast1_fu_482_p1() {
    tmp_2_cast1_fu_482_p1 = esl_zext<5,3>(j_mid2_reg_662.read());
}

void matrixmul::thread_tmp_2_cast2_fu_430_p1() {
    tmp_2_cast2_fu_430_p1 = esl_zext<4,3>(j_mid2_reg_662.read());
}

void matrixmul::thread_tmp_2_cast_fu_388_p1() {
    tmp_2_cast_fu_388_p1 = esl_zext<31,3>(j_mid2_reg_662.read());
}

void matrixmul::thread_tmp_2_fu_453_p3() {
    tmp_2_fu_453_p3 = esl_concat<60,4>(ap_const_lv60_0, tmp_s_fu_448_p2.read());
}

void matrixmul::thread_tmp_4_cast_fu_317_p1() {
    tmp_4_cast_fu_317_p1 = esl_zext<31,30>(A1_fu_303_p4.read());
}

void matrixmul::thread_tmp_4_fu_313_p1() {
    tmp_4_fu_313_p1 = esl_zext<64,30>(A1_fu_303_p4.read());
}

void matrixmul::thread_tmp_5_fu_361_p3() {
    tmp_5_fu_361_p3 = esl_concat<2,2>(tmp_mid2_v_fu_353_p3.read(), ap_const_lv2_0);
}

void matrixmul::thread_tmp_6_1_fu_584_p2() {
    tmp_6_1_fu_584_p2 = (!gmem_addr_1_read_reg_788.read().is_01() || !gmem_addr_5_read_reg_793.read().is_01())? sc_lv<32>(): sc_bigint<32>(gmem_addr_1_read_reg_788.read()) * sc_bigint<32>(gmem_addr_5_read_reg_793.read());
}

void matrixmul::thread_tmp_6_2_fu_588_p2() {
    tmp_6_2_fu_588_p2 = (!gmem_addr_2_read_reg_803.read().is_01() || !gmem_addr_6_read_reg_808.read().is_01())? sc_lv<32>(): sc_bigint<32>(gmem_addr_2_read_reg_803.read()) * sc_bigint<32>(gmem_addr_6_read_reg_808.read());
}

void matrixmul::thread_tmp_6_3_fu_600_p2() {
    tmp_6_3_fu_600_p2 = (!gmem_addr_3_read_reg_818.read().is_01() || !gmem_addr_7_read_reg_823.read().is_01())? sc_lv<32>(): sc_bigint<32>(gmem_addr_3_read_reg_818.read()) * sc_bigint<32>(gmem_addr_7_read_reg_823.read());
}

void matrixmul::thread_tmp_6_fu_580_p2() {
    tmp_6_fu_580_p2 = (!gmem_addr_read_reg_773.read().is_01() || !gmem_addr_4_read_reg_778.read().is_01())? sc_lv<32>(): sc_bigint<32>(gmem_addr_read_reg_773.read()) * sc_bigint<32>(gmem_addr_4_read_reg_778.read());
}

void matrixmul::thread_tmp_7_cast1_fu_537_p1() {
    tmp_7_cast1_fu_537_p1 = esl_zext<5,4>(tmp_5_reg_676.read());
}

void matrixmul::thread_tmp_7_cast_fu_369_p1() {
    tmp_7_cast_fu_369_p1 = esl_zext<31,4>(tmp_5_fu_361_p3.read());
}

void matrixmul::thread_tmp_7_fu_500_p2() {
    tmp_7_fu_500_p2 = (tmp_5_reg_676.read() | ap_const_lv4_3);
}

void matrixmul::thread_tmp_8_fu_396_p2() {
    tmp_8_fu_396_p2 = (tmp_5_reg_676.read() | ap_const_lv4_1);
}

void matrixmul::thread_tmp_9_fu_401_p3() {
    tmp_9_fu_401_p3 = esl_concat<60,4>(ap_const_lv60_0, tmp_8_fu_396_p2.read());
}

void matrixmul::thread_tmp_cast_fu_285_p1() {
    tmp_cast_fu_285_p1 = esl_zext<31,30>(tmp_fu_275_p4.read());
}

void matrixmul::thread_tmp_fu_275_p4() {
    tmp_fu_275_p4 = out_r.read().range(31, 2);
}

void matrixmul::thread_tmp_mid2_cast_fu_534_p1() {
    tmp_mid2_cast_fu_534_p1 = esl_zext<5,2>(tmp_mid2_v_reg_670.read());
}

void matrixmul::thread_tmp_mid2_v_fu_353_p3() {
    tmp_mid2_v_fu_353_p3 = (!exitcond_fu_339_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_339_p2.read()[0].to_bool())? i_1_fu_333_p2.read(): ap_phi_mux_i_phi_fu_257_p4.read());
}

void matrixmul::thread_tmp_s_fu_448_p2() {
    tmp_s_fu_448_p2 = (tmp_5_reg_676.read() | ap_const_lv4_2);
}

void matrixmul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_321_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_321_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void matrixmul::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem_AWVALID\" :  \"" << m_axi_gmem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_AWREADY\" :  \"" << m_axi_gmem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWADDR\" :  \"" << m_axi_gmem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWID\" :  \"" << m_axi_gmem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLEN\" :  \"" << m_axi_gmem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWSIZE\" :  \"" << m_axi_gmem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWBURST\" :  \"" << m_axi_gmem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLOCK\" :  \"" << m_axi_gmem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWCACHE\" :  \"" << m_axi_gmem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWPROT\" :  \"" << m_axi_gmem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWQOS\" :  \"" << m_axi_gmem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWREGION\" :  \"" << m_axi_gmem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWUSER\" :  \"" << m_axi_gmem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WVALID\" :  \"" << m_axi_gmem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_WREADY\" :  \"" << m_axi_gmem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WDATA\" :  \"" << m_axi_gmem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WSTRB\" :  \"" << m_axi_gmem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WLAST\" :  \"" << m_axi_gmem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WID\" :  \"" << m_axi_gmem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WUSER\" :  \"" << m_axi_gmem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARVALID\" :  \"" << m_axi_gmem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_ARREADY\" :  \"" << m_axi_gmem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARADDR\" :  \"" << m_axi_gmem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARID\" :  \"" << m_axi_gmem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLEN\" :  \"" << m_axi_gmem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARSIZE\" :  \"" << m_axi_gmem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARBURST\" :  \"" << m_axi_gmem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLOCK\" :  \"" << m_axi_gmem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARCACHE\" :  \"" << m_axi_gmem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARPROT\" :  \"" << m_axi_gmem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARQOS\" :  \"" << m_axi_gmem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARREGION\" :  \"" << m_axi_gmem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARUSER\" :  \"" << m_axi_gmem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RVALID\" :  \"" << m_axi_gmem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_RREADY\" :  \"" << m_axi_gmem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RDATA\" :  \"" << m_axi_gmem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RLAST\" :  \"" << m_axi_gmem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RID\" :  \"" << m_axi_gmem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RUSER\" :  \"" << m_axi_gmem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RRESP\" :  \"" << m_axi_gmem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BVALID\" :  \"" << m_axi_gmem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_BREADY\" :  \"" << m_axi_gmem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BRESP\" :  \"" << m_axi_gmem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BID\" :  \"" << m_axi_gmem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BUSER\" :  \"" << m_axi_gmem_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

