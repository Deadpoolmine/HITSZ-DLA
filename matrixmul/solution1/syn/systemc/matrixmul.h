// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrixmul_HH_
#define _matrixmul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixmul_AXILiteS_s_axi.h"
#include "matrixmul_gmem_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct matrixmul : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_AWVALID;
    sc_in< sc_logic > m_axi_gmem_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_AWUSER_WIDTH> > m_axi_gmem_AWUSER;
    sc_out< sc_logic > m_axi_gmem_WVALID;
    sc_in< sc_logic > m_axi_gmem_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH/8> > m_axi_gmem_WSTRB;
    sc_out< sc_logic > m_axi_gmem_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_WUSER_WIDTH> > m_axi_gmem_WUSER;
    sc_out< sc_logic > m_axi_gmem_ARVALID;
    sc_in< sc_logic > m_axi_gmem_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_ARUSER_WIDTH> > m_axi_gmem_ARUSER;
    sc_in< sc_logic > m_axi_gmem_RVALID;
    sc_out< sc_logic > m_axi_gmem_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_RDATA;
    sc_in< sc_logic > m_axi_gmem_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_RUSER_WIDTH> > m_axi_gmem_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_RRESP;
    sc_in< sc_logic > m_axi_gmem_BVALID;
    sc_out< sc_logic > m_axi_gmem_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_BUSER_WIDTH> > m_axi_gmem_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const7;


    // Module declarations
    matrixmul(sc_module_name name);
    SC_HAS_PROCESS(matrixmul);

    ~matrixmul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixmul_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* matrixmul_AXILiteS_s_axi_U;
    matrixmul_gmem_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>* matrixmul_gmem_m_axi_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > A;
    sc_signal< sc_lv<32> > B;
    sc_signal< sc_lv<32> > out_r;
    sc_signal< sc_logic > gmem_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_653;
    sc_signal< sc_logic > gmem_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_653_pp0_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_pp0_stage7;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_pp0_stage6;
    sc_signal< sc_logic > gmem_blk_n_AW;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_653_pp0_iter2_reg;
    sc_signal< sc_logic > gmem_blk_n_W;
    sc_signal< sc_logic > gmem_blk_n_B;
    sc_signal< sc_logic > gmem_AWVALID;
    sc_signal< sc_logic > gmem_AWREADY;
    sc_signal< sc_lv<32> > gmem_AWADDR;
    sc_signal< sc_logic > gmem_WVALID;
    sc_signal< sc_logic > gmem_WREADY;
    sc_signal< sc_logic > gmem_ARVALID;
    sc_signal< sc_logic > gmem_ARREADY;
    sc_signal< sc_lv<32> > gmem_ARADDR;
    sc_signal< sc_logic > gmem_RVALID;
    sc_signal< sc_logic > gmem_RREADY;
    sc_signal< sc_lv<32> > gmem_RDATA;
    sc_signal< sc_logic > gmem_RLAST;
    sc_signal< sc_lv<1> > gmem_RID;
    sc_signal< sc_lv<1> > gmem_RUSER;
    sc_signal< sc_lv<2> > gmem_RRESP;
    sc_signal< sc_logic > gmem_BVALID;
    sc_signal< sc_logic > gmem_BREADY;
    sc_signal< sc_lv<2> > gmem_BRESP;
    sc_signal< sc_lv<1> > gmem_BID;
    sc_signal< sc_lv<1> > gmem_BUSER;
    sc_signal< sc_lv<4> > indvar_flatten_reg_242;
    sc_signal< sc_lv<2> > i_reg_253;
    sc_signal< sc_lv<3> > j_reg_264;
    sc_signal< sc_lv<31> > tmp_cast_fu_285_p1;
    sc_signal< sc_lv<31> > tmp_cast_reg_628;
    sc_signal< sc_lv<31> > tmp_1_cast_fu_299_p1;
    sc_signal< sc_lv<31> > tmp_1_cast_reg_633;
    sc_signal< sc_lv<64> > tmp_4_fu_313_p1;
    sc_signal< sc_lv<64> > tmp_4_reg_641;
    sc_signal< sc_lv<31> > tmp_4_cast_fu_317_p1;
    sc_signal< sc_lv<31> > tmp_4_cast_reg_648;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_321_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_ARREADY;
    sc_signal< bool > ap_block_state10_io;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<4> > indvar_flatten_next_fu_327_p2;
    sc_signal< sc_lv<4> > indvar_flatten_next_reg_657;
    sc_signal< sc_lv<3> > j_mid2_fu_345_p3;
    sc_signal< sc_lv<3> > j_mid2_reg_662;
    sc_signal< sc_lv<2> > tmp_mid2_v_fu_353_p3;
    sc_signal< sc_lv<2> > tmp_mid2_v_reg_670;
    sc_signal< sc_lv<4> > tmp_5_fu_361_p3;
    sc_signal< sc_lv<4> > tmp_5_reg_676;
    sc_signal< sc_lv<31> > A2_sum_fu_373_p2;
    sc_signal< sc_lv<31> > A2_sum_reg_684;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_state11_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state19_pp0_stage1_iter2;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_AWREADY;
    sc_signal< bool > ap_block_state19_io;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<31> > B4_sum_fu_391_p2;
    sc_signal< sc_lv<31> > B4_sum_reg_695;
    sc_signal< sc_lv<32> > gmem_addr_1_reg_700;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< bool > ap_block_state12_pp0_stage2_iter1;
    sc_signal< bool > ap_block_state20_pp0_stage2_iter2;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_WREADY;
    sc_signal< bool > ap_block_state20_io;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<31> > B4_sum1_fu_443_p2;
    sc_signal< sc_lv<31> > B4_sum1_reg_712;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< bool > ap_block_state13_pp0_stage3_iter1;
    sc_signal< bool > ap_block_state21_pp0_stage3_iter2;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > gmem_addr_2_reg_717;
    sc_signal< bool > ap_block_state6_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state6_io;
    sc_signal< bool > ap_block_state14_pp0_stage4_iter1;
    sc_signal< bool > ap_block_state22_pp0_stage4_iter2;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<5> > tmp_2_cast1_fu_482_p1;
    sc_signal< sc_lv<5> > tmp_2_cast1_reg_729;
    sc_signal< bool > ap_block_state7_pp0_stage5_iter0;
    sc_signal< bool > ap_block_state7_io;
    sc_signal< bool > ap_block_state15_pp0_stage5_iter1;
    sc_signal< bool > ap_block_state23_pp0_stage5_iter2;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<31> > B4_sum2_fu_495_p2;
    sc_signal< sc_lv<31> > B4_sum2_reg_735;
    sc_signal< sc_lv<32> > gmem_addr_3_reg_740;
    sc_signal< bool > ap_block_state8_pp0_stage6_iter0;
    sc_signal< bool > ap_block_state8_io;
    sc_signal< bool > ap_block_state16_pp0_stage6_iter1;
    sc_signal< bool > ap_block_state24_pp0_stage6_iter2;
    sc_signal< bool > ap_block_pp0_stage6_11001;
    sc_signal< sc_lv<31> > B4_sum3_fu_555_p2;
    sc_signal< sc_lv<31> > B4_sum3_reg_752;
    sc_signal< bool > ap_block_state9_pp0_stage7_iter0;
    sc_signal< bool > ap_block_state9_io;
    sc_signal< bool > ap_block_state17_pp0_stage7_iter1;
    sc_signal< bool > ap_block_state25_pp0_stage7_iter2;
    sc_signal< bool > ap_block_pp0_stage7_11001;
    sc_signal< sc_lv<5> > tmp_15_fu_560_p2;
    sc_signal< sc_lv<5> > tmp_15_reg_757;
    sc_signal< sc_lv<5> > tmp_15_reg_757_pp0_iter1_reg;
    sc_signal< sc_lv<3> > j_1_fu_565_p2;
    sc_signal< sc_lv<3> > j_1_reg_762;
    sc_signal< sc_lv<32> > gmem_addr_read_reg_773;
    sc_signal< sc_lv<32> > gmem_addr_4_read_reg_778;
    sc_signal< sc_lv<32> > tmp_6_fu_580_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_783;
    sc_signal< sc_lv<32> > gmem_addr_1_read_reg_788;
    sc_signal< sc_lv<32> > gmem_addr_5_read_reg_793;
    sc_signal< sc_lv<32> > tmp_6_1_fu_584_p2;
    sc_signal< sc_lv<32> > tmp_6_1_reg_798;
    sc_signal< sc_lv<32> > gmem_addr_2_read_reg_803;
    sc_signal< sc_lv<32> > gmem_addr_6_read_reg_808;
    sc_signal< sc_lv<32> > tmp_6_2_fu_588_p2;
    sc_signal< sc_lv<32> > tmp_6_2_reg_813;
    sc_signal< sc_lv<32> > gmem_addr_3_read_reg_818;
    sc_signal< sc_lv<32> > gmem_addr_7_read_reg_823;
    sc_signal< sc_lv<31> > out6_sum_fu_595_p2;
    sc_signal< sc_lv<31> > out6_sum_reg_828;
    sc_signal< sc_lv<32> > tmp_6_3_fu_600_p2;
    sc_signal< sc_lv<32> > tmp_6_3_reg_833;
    sc_signal< sc_lv<32> > tmp_1_3_fu_622_p2;
    sc_signal< sc_lv<32> > tmp_1_3_reg_844;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage7_subdone;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_246_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_i_phi_fu_257_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_j_phi_fu_268_p4;
    sc_signal< sc_lv<64> > A2_sum_cast_fu_378_p1;
    sc_signal< sc_lv<64> > A2_sum7_fu_409_p2;
    sc_signal< sc_lv<64> > B4_sum_cast_fu_420_p1;
    sc_signal< sc_lv<64> > A2_sum8_fu_461_p2;
    sc_signal< sc_lv<64> > B4_sum1_cast_fu_472_p1;
    sc_signal< sc_lv<64> > A2_sum9_fu_513_p2;
    sc_signal< sc_lv<64> > B4_sum2_cast_fu_524_p1;
    sc_signal< sc_lv<64> > B4_sum3_cast_fu_570_p1;
    sc_signal< sc_lv<64> > out6_sum_cast_fu_604_p1;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_ARREADY;
    sc_signal< bool > ap_block_pp0_stage1_01001;
    sc_signal< bool > ap_block_pp0_stage2_01001;
    sc_signal< bool > ap_block_pp0_stage3_01001;
    sc_signal< bool > ap_block_pp0_stage4_01001;
    sc_signal< bool > ap_block_pp0_stage5_01001;
    sc_signal< bool > ap_block_pp0_stage6_01001;
    sc_signal< bool > ap_block_pp0_stage7_01001;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_WREADY;
    sc_signal< sc_lv<30> > tmp_fu_275_p4;
    sc_signal< sc_lv<30> > tmp_1_fu_289_p4;
    sc_signal< sc_lv<30> > A1_fu_303_p4;
    sc_signal< sc_lv<1> > exitcond_fu_339_p2;
    sc_signal< sc_lv<2> > i_1_fu_333_p2;
    sc_signal< sc_lv<31> > tmp_7_cast_fu_369_p1;
    sc_signal< sc_lv<31> > tmp_2_cast_fu_388_p1;
    sc_signal< sc_lv<4> > tmp_8_fu_396_p2;
    sc_signal< sc_lv<64> > tmp_9_fu_401_p3;
    sc_signal< sc_lv<4> > tmp_2_cast2_fu_430_p1;
    sc_signal< sc_lv<4> > tmp_12_fu_433_p2;
    sc_signal< sc_lv<31> > tmp_16_cast_fu_439_p1;
    sc_signal< sc_lv<4> > tmp_s_fu_448_p2;
    sc_signal< sc_lv<64> > tmp_2_fu_453_p3;
    sc_signal< sc_lv<5> > tmp_13_fu_485_p2;
    sc_signal< sc_lv<31> > tmp_17_cast_fu_491_p1;
    sc_signal< sc_lv<4> > tmp_7_fu_500_p2;
    sc_signal< sc_lv<64> > tmp_10_fu_505_p3;
    sc_signal< sc_lv<5> > tmp_7_cast1_fu_537_p1;
    sc_signal< sc_lv<5> > tmp_mid2_cast_fu_534_p1;
    sc_signal< sc_lv<5> > tmp_14_fu_546_p2;
    sc_signal< sc_lv<31> > tmp_18_cast_fu_551_p1;
    sc_signal< sc_lv<5> > tmp_11_fu_540_p2;
    sc_signal< sc_lv<31> > tmp_19_cast_fu_592_p1;
    sc_signal< sc_lv<32> > tmp2_fu_618_p2;
    sc_signal< sc_lv<32> > tmp1_fu_614_p2;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage6_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_1023;
    sc_signal< bool > ap_condition_1027;
    sc_signal< bool > ap_condition_613;
    sc_signal< bool > ap_condition_624;
    sc_signal< bool > ap_condition_636;
    sc_signal< bool > ap_condition_648;
    sc_signal< bool > ap_condition_660;
    sc_signal< bool > ap_condition_672;
    sc_signal< bool > ap_condition_685;
    sc_signal< bool > ap_condition_696;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_pp0_stage0;
    static const sc_lv<10> ap_ST_fsm_pp0_stage1;
    static const sc_lv<10> ap_ST_fsm_pp0_stage2;
    static const sc_lv<10> ap_ST_fsm_pp0_stage3;
    static const sc_lv<10> ap_ST_fsm_pp0_stage4;
    static const sc_lv<10> ap_ST_fsm_pp0_stage5;
    static const sc_lv<10> ap_ST_fsm_pp0_stage6;
    static const sc_lv<10> ap_ST_fsm_pp0_stage7;
    static const sc_lv<10> ap_ST_fsm_state26;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_7;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_USER_VALUE;
    static const int C_M_AXI_GMEM_PROT_VALUE;
    static const int C_M_AXI_GMEM_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<60> ap_const_lv60_0;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_9;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const7();
    void thread_ap_clk_no_reset_();
    void thread_A1_fu_303_p4();
    void thread_A2_sum7_fu_409_p2();
    void thread_A2_sum8_fu_461_p2();
    void thread_A2_sum9_fu_513_p2();
    void thread_A2_sum_cast_fu_378_p1();
    void thread_A2_sum_fu_373_p2();
    void thread_B4_sum1_cast_fu_472_p1();
    void thread_B4_sum1_fu_443_p2();
    void thread_B4_sum2_cast_fu_524_p1();
    void thread_B4_sum2_fu_495_p2();
    void thread_B4_sum3_cast_fu_570_p1();
    void thread_B4_sum3_fu_555_p2();
    void thread_B4_sum_cast_fu_420_p1();
    void thread_B4_sum_fu_391_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state26();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_01001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_01001();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_01001();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_01001();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_01001();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_pp0_stage6();
    void thread_ap_block_pp0_stage6_01001();
    void thread_ap_block_pp0_stage6_11001();
    void thread_ap_block_pp0_stage6_subdone();
    void thread_ap_block_pp0_stage7();
    void thread_ap_block_pp0_stage7_01001();
    void thread_ap_block_pp0_stage7_11001();
    void thread_ap_block_pp0_stage7_subdone();
    void thread_ap_block_state10_io();
    void thread_ap_block_state10_pp0_stage0_iter1();
    void thread_ap_block_state11_pp0_stage1_iter1();
    void thread_ap_block_state12_pp0_stage2_iter1();
    void thread_ap_block_state13_pp0_stage3_iter1();
    void thread_ap_block_state14_pp0_stage4_iter1();
    void thread_ap_block_state15_pp0_stage5_iter1();
    void thread_ap_block_state16_pp0_stage6_iter1();
    void thread_ap_block_state17_pp0_stage7_iter1();
    void thread_ap_block_state18_pp0_stage0_iter2();
    void thread_ap_block_state19_io();
    void thread_ap_block_state19_pp0_stage1_iter2();
    void thread_ap_block_state20_io();
    void thread_ap_block_state20_pp0_stage2_iter2();
    void thread_ap_block_state21_pp0_stage3_iter2();
    void thread_ap_block_state22_pp0_stage4_iter2();
    void thread_ap_block_state23_pp0_stage5_iter2();
    void thread_ap_block_state24_pp0_stage6_iter2();
    void thread_ap_block_state25_pp0_stage7_iter2();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_io();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_io();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_io();
    void thread_ap_block_state6_pp0_stage4_iter0();
    void thread_ap_block_state7_io();
    void thread_ap_block_state7_pp0_stage5_iter0();
    void thread_ap_block_state8_io();
    void thread_ap_block_state8_pp0_stage6_iter0();
    void thread_ap_block_state9_io();
    void thread_ap_block_state9_pp0_stage7_iter0();
    void thread_ap_condition_1023();
    void thread_ap_condition_1027();
    void thread_ap_condition_613();
    void thread_ap_condition_624();
    void thread_ap_condition_636();
    void thread_ap_condition_648();
    void thread_ap_condition_660();
    void thread_ap_condition_672();
    void thread_ap_condition_685();
    void thread_ap_condition_696();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_phi_fu_257_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_246_p4();
    void thread_ap_phi_mux_j_phi_fu_268_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_gmem_ARREADY();
    void thread_ap_sig_ioackin_gmem_AWREADY();
    void thread_ap_sig_ioackin_gmem_WREADY();
    void thread_exitcond_flatten_fu_321_p2();
    void thread_exitcond_fu_339_p2();
    void thread_gmem_ARADDR();
    void thread_gmem_ARVALID();
    void thread_gmem_AWADDR();
    void thread_gmem_AWVALID();
    void thread_gmem_BREADY();
    void thread_gmem_RREADY();
    void thread_gmem_WVALID();
    void thread_gmem_blk_n_AR();
    void thread_gmem_blk_n_AW();
    void thread_gmem_blk_n_B();
    void thread_gmem_blk_n_R();
    void thread_gmem_blk_n_W();
    void thread_i_1_fu_333_p2();
    void thread_indvar_flatten_next_fu_327_p2();
    void thread_j_1_fu_565_p2();
    void thread_j_mid2_fu_345_p3();
    void thread_out6_sum_cast_fu_604_p1();
    void thread_out6_sum_fu_595_p2();
    void thread_tmp1_fu_614_p2();
    void thread_tmp2_fu_618_p2();
    void thread_tmp_10_fu_505_p3();
    void thread_tmp_11_fu_540_p2();
    void thread_tmp_12_fu_433_p2();
    void thread_tmp_13_fu_485_p2();
    void thread_tmp_14_fu_546_p2();
    void thread_tmp_15_fu_560_p2();
    void thread_tmp_16_cast_fu_439_p1();
    void thread_tmp_17_cast_fu_491_p1();
    void thread_tmp_18_cast_fu_551_p1();
    void thread_tmp_19_cast_fu_592_p1();
    void thread_tmp_1_3_fu_622_p2();
    void thread_tmp_1_cast_fu_299_p1();
    void thread_tmp_1_fu_289_p4();
    void thread_tmp_2_cast1_fu_482_p1();
    void thread_tmp_2_cast2_fu_430_p1();
    void thread_tmp_2_cast_fu_388_p1();
    void thread_tmp_2_fu_453_p3();
    void thread_tmp_4_cast_fu_317_p1();
    void thread_tmp_4_fu_313_p1();
    void thread_tmp_5_fu_361_p3();
    void thread_tmp_6_1_fu_584_p2();
    void thread_tmp_6_2_fu_588_p2();
    void thread_tmp_6_3_fu_600_p2();
    void thread_tmp_6_fu_580_p2();
    void thread_tmp_7_cast1_fu_537_p1();
    void thread_tmp_7_cast_fu_369_p1();
    void thread_tmp_7_fu_500_p2();
    void thread_tmp_8_fu_396_p2();
    void thread_tmp_9_fu_401_p3();
    void thread_tmp_cast_fu_285_p1();
    void thread_tmp_fu_275_p4();
    void thread_tmp_mid2_cast_fu_534_p1();
    void thread_tmp_mid2_v_fu_353_p3();
    void thread_tmp_s_fu_448_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
